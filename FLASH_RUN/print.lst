   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"print.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._sputc,"ax",%progbits
  20              		.align	1
  21              		.global	_sputc
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_sputc:
  27              	.LVL0:
  28              	.LFB1:
  29              		.file 1 "source\\lcd\\print.c"
   1:source\lcd/print.c **** /********************************************************************************/
   2:source\lcd/print.c **** /* print.c                                                                      */
   3:source\lcd/print.c **** /* STM32F407ZGT6                                                                */
   4:source\lcd/print.c **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:source\lcd/print.c **** /* stm32f4x_test								*/
   6:source\lcd/print.c **** /********************************************************************************/
   7:source\lcd/print.c **** #include <stdarg.h>
   8:source\lcd/print.c **** 
   9:source\lcd/print.c **** 
  10:source\lcd/print.c **** //void _stfp(double d, void *x);
  11:source\lcd/print.c **** unsigned int strlen (const char *str);
  12:source\lcd/print.c **** int errno;
  13:source\lcd/print.c **** 
  14:source\lcd/print.c **** typedef struct {
  15:source\lcd/print.c ****       char *ptr;
  16:source\lcd/print.c **** } __attribute__((packed)) StringOutputFile;
  17:source\lcd/print.c **** 
  18:source\lcd/print.c **** int _serror(char *f);
  19:source\lcd/print.c **** 
  20:source\lcd/print.c **** 
  21:source\lcd/print.c **** int _sputc1(int ch, char *fp)
  22:source\lcd/print.c **** {
  23:source\lcd/print.c ****       char *sf = (char *)fp;
  24:source\lcd/print.c ****       char *op = sf;
  25:source\lcd/print.c ****       int r = *op++ = ch;
  26:source\lcd/print.c ****       sf = op;
  27:source\lcd/print.c ****       return r;
  28:source\lcd/print.c **** }
  29:source\lcd/print.c **** 
  30:source\lcd/print.c **** 
  31:source\lcd/print.c **** int _sputc(int ch, char *fp)
  32:source\lcd/print.c **** {
  30              		.loc 1 32 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  33:source\lcd/print.c ****       StringOutputFile *sf = (StringOutputFile *)fp;
  35              		.loc 1 33 7 view .LVU1
  34:source\lcd/print.c ****       char *op = sf->ptr;
  36              		.loc 1 34 7 view .LVU2
  35:source\lcd/print.c ****       int r = *op++ = ch;
  37              		.loc 1 35 7 view .LVU3
  38              		.loc 1 35 21 is_stmt 0 view .LVU4
  39 0000 0B68     		ldr	r3, [r1]	@ unaligned
  40 0002 03F8010B 		strb	r0, [r3], #1
  41              	.LVL1:
  36:source\lcd/print.c ****       sf->ptr = op;
  42              		.loc 1 36 7 is_stmt 1 view .LVU5
  37:source\lcd/print.c ****       return r;
  38:source\lcd/print.c **** }
  43              		.loc 1 38 1 is_stmt 0 view .LVU6
  44 0006 C0B2     		uxtb	r0, r0
  45              	.LVL2:
  36:source\lcd/print.c ****       sf->ptr = op;
  46              		.loc 1 36 15 view .LVU7
  47 0008 0B60     		str	r3, [r1]	@ unaligned
  37:source\lcd/print.c ****       return r;
  48              		.loc 1 37 7 is_stmt 1 view .LVU8
  49              		.loc 1 38 1 is_stmt 0 view .LVU9
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE1:
  54              		.section	.text._serror,"ax",%progbits
  55              		.align	1
  56              		.global	_serror
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	_serror:
  62              	.LVL3:
  63              	.LFB2:
  39:source\lcd/print.c **** 
  40:source\lcd/print.c **** 
  41:source\lcd/print.c **** #define IGNORE(x) ((x)=(x))
  42:source\lcd/print.c **** #define DecimalPoint '.'
  43:source\lcd/print.c **** 
  44:source\lcd/print.c **** 
  45:source\lcd/print.c **** int _serror(char *f)
  46:source\lcd/print.c **** {
  64              		.loc 1 46 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  47:source\lcd/print.c ****       IGNORE(f);
  69              		.loc 1 47 7 view .LVU11
  48:source\lcd/print.c ****       return 0;
  70              		.loc 1 48 7 view .LVU12
  49:source\lcd/print.c **** }
  71              		.loc 1 49 1 is_stmt 0 view .LVU13
  72 0000 0020     		movs	r0, #0
  73              	.LVL4:
  74              		.loc 1 49 1 view .LVU14
  75 0002 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE2:
  79              		.section	.text._sputc1,"ax",%progbits
  80              		.align	1
  81              		.global	_sputc1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	_sputc1:
  87              	.LVL5:
  88              	.LFB0:
  22:source\lcd/print.c ****       char *sf = (char *)fp;
  89              		.loc 1 22 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  23:source\lcd/print.c ****       char *op = sf;
  94              		.loc 1 23 7 view .LVU16
  24:source\lcd/print.c ****       int r = *op++ = ch;
  95              		.loc 1 24 7 view .LVU17
  25:source\lcd/print.c ****       sf = op;
  96              		.loc 1 25 7 view .LVU18
  25:source\lcd/print.c ****       sf = op;
  97              		.loc 1 25 21 is_stmt 0 view .LVU19
  98 0000 0870     		strb	r0, [r1]
  99              	.LVL6:
  26:source\lcd/print.c ****       return r;
 100              		.loc 1 26 7 is_stmt 1 view .LVU20
  27:source\lcd/print.c **** }
 101              		.loc 1 27 7 view .LVU21
  28:source\lcd/print.c **** 
 102              		.loc 1 28 1 is_stmt 0 view .LVU22
 103 0002 C0B2     		uxtb	r0, r0
 104              	.LVL7:
  28:source\lcd/print.c **** 
 105              		.loc 1 28 1 view .LVU23
 106 0004 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.section	.text.is_digit,"ax",%progbits
 111              		.align	1
 112              		.global	is_digit
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	is_digit:
 118              	.LVL8:
 119              	.LFB3:
  50:source\lcd/print.c **** 
  51:source\lcd/print.c **** 
  52:source\lcd/print.c **** typedef struct {
  53:source\lcd/print.c ****       int flags;
  54:source\lcd/print.c ****       char *prefix;
  55:source\lcd/print.c ****       int precision;
  56:source\lcd/print.c ****       int before_dot;
  57:source\lcd/print.c ****       int after_dot;
  58:source\lcd/print.c ****       double d;
  59:source\lcd/print.c **** } fp_print_rec;
  60:source\lcd/print.c **** 
  61:source\lcd/print.c **** 
  62:source\lcd/print.c **** typedef int fp_print(int ch, char buff[], fp_print_rec *p);
  63:source\lcd/print.c **** 
  64:source\lcd/print.c **** 
  65:source\lcd/print.c **** typedef struct {
  66:source\lcd/print.c ****       fp_print_rec fpr;
  67:source\lcd/print.c ****       fp_print *fn;
  68:source\lcd/print.c ****       int (*putc)(int, char *);
  69:source\lcd/print.c ****       int (*ferror)(char *);
  70:source\lcd/print.c ****       char *hextab;
  71:source\lcd/print.c ****       int width;
  72:source\lcd/print.c ****       unsigned long long llval;
  73:source\lcd/print.c **** } printf_display_rec;
  74:source\lcd/print.c **** 
  75:source\lcd/print.c **** #define _LJUSTIFY         0x1
  76:source\lcd/print.c **** #define _SIGNED           0x2
  77:source\lcd/print.c **** #define _BLANKER          0x4
  78:source\lcd/print.c **** #define _VARIANT          0x8
  79:source\lcd/print.c **** #define _PRECGIVEN       0x10
  80:source\lcd/print.c **** #define _LONGSPEC        0x20
  81:source\lcd/print.c **** #define _LLSPEC          0x40
  82:source\lcd/print.c **** #define _SHORTSPEC       0x80
  83:source\lcd/print.c **** #define _PADZERO        0x100    /* *** DEPRECATED FEATURE *** */
  84:source\lcd/print.c **** #define _FPCONV         0x200
  85:source\lcd/print.c **** #define intofdigit(x) ((x)-'0')
  86:source\lcd/print.c **** 
  87:source\lcd/print.c **** #define xputc(dr, ch, f) (dr->putc(ch, f))
  88:source\lcd/print.c **** 
  89:source\lcd/print.c **** #define pr_padding(dr, ch, n, f)  while (--n>=0) charcount++, xputc(dr, ch, f);
  90:source\lcd/print.c **** 
  91:source\lcd/print.c **** #define pre_padding(dr, f)                                                \
  92:source\lcd/print.c ****         if (!(flags&_LJUSTIFY))                                           \
  93:source\lcd/print.c ****         {   char padchar = flags & _PADZERO ? '0' : ' ';                  \
  94:source\lcd/print.c ****             pr_padding(dr, padchar, width, f); }
  95:source\lcd/print.c **** 
  96:source\lcd/print.c **** #define post_padding(dr, f)                                               \
  97:source\lcd/print.c ****         if (flags&_LJUSTIFY)                                              \
  98:source\lcd/print.c ****         {   pr_padding(dr, ' ', width, f); }
  99:source\lcd/print.c **** #define FLOATING_WIDTH 18
 100:source\lcd/print.c **** typedef enum { fp_ord, fp_nan, fp_inf } fp_type;
 101:source\lcd/print.c **** 
 102:source\lcd/print.c **** int is_digit (int c)
 103:source\lcd/print.c **** {
 120              		.loc 1 103 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 104:source\lcd/print.c ****       return (unsigned int)(c - '0') <= 9;
 125              		.loc 1 104 7 view .LVU25
 126              		.loc 1 104 31 is_stmt 0 view .LVU26
 127 0000 3038     		subs	r0, r0, #48
 128              	.LVL9:
 105:source\lcd/print.c **** }
 129              		.loc 1 105 1 view .LVU27
 130 0002 0928     		cmp	r0, #9
 131 0004 8CBF     		ite	hi
 132 0006 0020     		movhi	r0, #0
 133              	.LVL10:
 134              		.loc 1 105 1 view .LVU28
 135 0008 0120     		movls	r0, #1
 136 000a 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE3:
 140              		.section	.rodata.__vfprintf.str1.1,"aMS",%progbits,1
 141              	.LC0:
 142 0000 305800   		.ascii	"0X\000"
 143              	.LC1:
 144 0003 00       		.ascii	"\000"
 145              	.LC2:
 146 0004 307800   		.ascii	"0x\000"
 147              	.LC3:
 148 0007 4000     		.ascii	"@\000"
 149              	.LC4:
 150 0009 3000     		.ascii	"0\000"
 151              	.LC5:
 152 000b 2B00     		.ascii	"+\000"
 153              	.LC6:
 154 000d 2000     		.ascii	" \000"
 155              	.LC7:
 156 000f 2D00     		.ascii	"-\000"
 157              	.LC8:
 158 0011 30313233 		.ascii	"0123456789ABCDEF\000"
 158      34353637 
 158      38394142 
 158      43444546 
 158      00
 159              	.LC9:
 160 0022 30313233 		.ascii	"0123456789abcdef\000"
 160      34353637 
 160      38396162 
 160      63646566 
 160      00
 161              		.global	__aeabi_uldivmod
 162              		.section	.text.__vfprintf,"ax",%progbits
 163              		.align	1
 164              		.global	__vfprintf
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	__vfprintf:
 170              	.LVL11:
 171              	.LFB5:
 106:source\lcd/print.c **** 
 107:source\lcd/print.c **** 
 108:source\lcd/print.c **** static int printf_display (char *p, int ch, printf_display_rec *dr, unsigned int v)
 109:source\lcd/print.c **** {
 110:source\lcd/print.c ****       int len = 0, charcount = 0;
 111:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 112:source\lcd/print.c ****       int flags = dr->fpr.flags;
 113:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 114:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 115:source\lcd/print.c ****       switch (ch) {
 116:source\lcd/print.c **** 	 case 'p':
 117:source\lcd/print.c **** 	 case 'X':
 118:source\lcd/print.c **** 	 case 'x':
 119:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 120:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 121:source\lcd/print.c **** 	      while (w != 0) {
 122:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 123:source\lcd/print.c **** 		    w = w >> 4;
 124:source\lcd/print.c **** 	      }
 125:source\lcd/print.c **** 	   } else {
 126:source\lcd/print.c **** 	      while (v != 0) {
 127:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 128:source\lcd/print.c **** 		    v = v >> 4;
 129:source\lcd/print.c **** 	      }
 130:source\lcd/print.c **** 	   }
 131:source\lcd/print.c **** 	   break;
 132:source\lcd/print.c **** 	 case 'o':
 133:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 134:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 135:source\lcd/print.c **** 	      while (w != 0) {
 136:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 137:source\lcd/print.c **** 		    w = w >> 3;
 138:source\lcd/print.c **** 	      }
 139:source\lcd/print.c **** 	   } else {
 140:source\lcd/print.c **** 	      while (v != 0) {
 141:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 142:source\lcd/print.c **** 		    v = v >> 3;
 143:source\lcd/print.c **** 	      }
 144:source\lcd/print.c **** 	   }
 145:source\lcd/print.c **** 	   if (flags & _VARIANT) dr->fpr.precision--;
 146:source\lcd/print.c **** 	   break;
 147:source\lcd/print.c **** 	 case 'u':
 148:source\lcd/print.c **** 	 case 'i':
 149:source\lcd/print.c **** 	 case 'd':
 150:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 151:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 152:source\lcd/print.c **** 	      while (w != 0) {
 153:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 154:source\lcd/print.c ****                     w = w / 10;
 155:source\lcd/print.c ****               }
 156:source\lcd/print.c ****            } else {
 157:source\lcd/print.c ****               while (v != 0) {
 158:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 159:source\lcd/print.c **** 		    v = v / 10;
 160:source\lcd/print.c **** 	      }
 161:source\lcd/print.c **** 	   }
 162:source\lcd/print.c **** 	   break;
 163:source\lcd/print.c ****          default:
 164:source\lcd/print.c **** 	   buff[0] = '0';
 165:source\lcd/print.c ****            buff[1] = DecimalPoint;
 166:source\lcd/print.c ****            buff[2] = '0';
 167:source\lcd/print.c ****            len = 3;
 168:source\lcd/print.c ****            break;
 169:source\lcd/print.c ****       }
 170:source\lcd/print.c ****       {
 171:source\lcd/print.c ****       int precision;
 172:source\lcd/print.c ****       int width = dr->width;
 173:source\lcd/print.c ****       if (flags & _FPCONV) {
 174:source\lcd/print.c **** 	 precision = 0;
 175:source\lcd/print.c **** 	 if (dr->fpr.before_dot>0) precision = dr->fpr.before_dot-1;
 176:source\lcd/print.c **** 	 if (dr->fpr.after_dot>0) precision += dr->fpr.after_dot-1;
 177:source\lcd/print.c ****       } else {
 178:source\lcd/print.c ****          precision = dr->fpr.precision;
 179:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 180:source\lcd/print.c ****       }
 181:source\lcd/print.c ****       width -= (precision + len + strlen(dr->fpr.prefix));
 182:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 183:source\lcd/print.c ****       {
 184:source\lcd/print.c ****       int c;                                      /* prefix    */
 185:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 186:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 187:source\lcd/print.c ****       }
 188:source\lcd/print.c ****       pre_padding(dr, p);
 189:source\lcd/print.c ****       if (flags & _FPCONV) {
 190:source\lcd/print.c **** 	 int i, c;
 191:source\lcd/print.c ****          for (i = 0; i<len; i++) {
 192:source\lcd/print.c **** 	     switch (c = buff[i]) {
 193:source\lcd/print.c ****                 case '<':
 194:source\lcd/print.c **** 		  pr_padding(dr, '0', dr->fpr.before_dot, p);
 195:source\lcd/print.c **** 		  break;
 196:source\lcd/print.c **** 		case '>':
 197:source\lcd/print.c **** 	       	  pr_padding(dr, '0', dr->fpr.after_dot, p);
 198:source\lcd/print.c **** 	          break;
 199:source\lcd/print.c **** 	        default:
 200:source\lcd/print.c **** 	      	  xputc(dr, c, p);
 201:source\lcd/print.c **** 	          charcount++;
 202:source\lcd/print.c **** 	          break;
 203:source\lcd/print.c **** 	     }
 204:source\lcd/print.c **** 	 }
 205:source\lcd/print.c ****       } else {
 206:source\lcd/print.c **** 	 pr_padding(dr, '0', precision, p);
 207:source\lcd/print.c **** 	 charcount += len;
 208:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 209:source\lcd/print.c ****       }
 210:source\lcd/print.c ****       post_padding(dr, p);
 211:source\lcd/print.c ****       return charcount;
 212:source\lcd/print.c ****       }
 213:source\lcd/print.c **** }
 214:source\lcd/print.c **** 
 215:source\lcd/print.c **** 
 216:source\lcd/print.c **** int __vfprintf (char *p, const char *fmt, va_list args, printf_display_rec *dr)
 217:source\lcd/print.c **** {
 172              		.loc 1 217 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 64
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 217 1 is_stmt 0 view .LVU30
 177 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 178              		.cfi_def_cfa_offset 36
 179              		.cfi_offset 4, -36
 180              		.cfi_offset 5, -32
 181              		.cfi_offset 6, -28
 182              		.cfi_offset 7, -24
 183              		.cfi_offset 8, -20
 184              		.cfi_offset 9, -16
 185              		.cfi_offset 10, -12
 186              		.cfi_offset 11, -8
 187              		.cfi_offset 14, -4
 188 0004 91B0     		sub	sp, sp, #68
 189              		.cfi_def_cfa_offset 104
 190              		.loc 1 217 1 view .LVU31
 191 0006 1D46     		mov	r5, r3
 218:source\lcd/print.c ****       int ch, charcount = 0;
 192              		.loc 1 218 15 view .LVU32
 193 0008 0023     		movs	r3, #0
 194              	.LVL12:
 217:source\lcd/print.c ****       int ch, charcount = 0;
 195              		.loc 1 217 1 view .LVU33
 196 000a 8146     		mov	r9, r0
 197 000c 8B46     		mov	fp, r1
 198 000e 9046     		mov	r8, r2
 199              	.LVL13:
 200              		.loc 1 218 7 is_stmt 1 view .LVU34
 219:source\lcd/print.c ****       while ((ch = *fmt++) != 0) {
 201              		.loc 1 219 7 view .LVU35
 218:source\lcd/print.c ****       int ch, charcount = 0;
 202              		.loc 1 218 15 is_stmt 0 view .LVU36
 203 0010 0193     		str	r3, [sp, #4]
 204              	.LVL14:
 205              	.L6:
 206              		.loc 1 219 13 is_stmt 1 view .LVU37
 207              		.loc 1 219 24 is_stmt 0 view .LVU38
 208 0012 DA46     		mov	r10, fp
 209              	.LVL15:
 210              		.loc 1 219 18 view .LVU39
 211 0014 1AF8014B 		ldrb	r4, [r10], #1	@ zero_extendqisi2
 212              	.LVL16:
 213              		.loc 1 219 13 view .LVU40
 214 0018 54B9     		cbnz	r4, .L137
 220:source\lcd/print.c ****       	    if (ch != '%') {
 221:source\lcd/print.c ****       	       xputc(dr, ch, p);
 222:source\lcd/print.c ****       	       charcount++;
 223:source\lcd/print.c ****       	    } else {
 224:source\lcd/print.c ****       	       int flags = 0, width = 0;
 225:source\lcd/print.c ****                unsigned int v = 0;
 226:source\lcd/print.c ****                for (;;) {
 227:source\lcd/print.c ****                    switch (ch = *fmt++) {
 228:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 229:source\lcd/print.c ****                         continue;
 230:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 231:source\lcd/print.c ****                         continue;
 232:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 233:source\lcd/print.c ****                         continue;
 234:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 235:source\lcd/print.c ****                         continue;
 236:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 237:source\lcd/print.c ****                         continue;
 238:source\lcd/print.c ****                       default:
 239:source\lcd/print.c ****                         break;
 240:source\lcd/print.c ****                    }
 241:source\lcd/print.c ****                    break;
 242:source\lcd/print.c ****                }
 243:source\lcd/print.c ****                {
 244:source\lcd/print.c ****                int t = 0;
 245:source\lcd/print.c ****                if (ch == '*') {
 246:source\lcd/print.c ****                   t = va_arg(args, int);
 247:source\lcd/print.c ****                   if (t < 0) {
 248:source\lcd/print.c ****                      t = - t;
 249:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 250:source\lcd/print.c ****                   }
 251:source\lcd/print.c ****                   ch = *fmt++;
 252:source\lcd/print.c ****                } else {
 253:source\lcd/print.c ****                	  while (is_digit(ch)) {
 254:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 255:source\lcd/print.c ****                         ch = *fmt++;
 256:source\lcd/print.c ****                   }
 257:source\lcd/print.c ****                }
 258:source\lcd/print.c ****                width = t>=0 ? t : 0;                 /* disallow -ve arg */
 259:source\lcd/print.c ****                }
 260:source\lcd/print.c ****                if (ch == '.') {                           /* precision spec */
 261:source\lcd/print.c ****                   int t = 0;
 262:source\lcd/print.c ****                   ch = *fmt++;
 263:source\lcd/print.c ****                   if (ch == '*') {
 264:source\lcd/print.c ****                      t = va_arg(args, int);
 265:source\lcd/print.c ****                      ch = *fmt++;
 266:source\lcd/print.c ****                   } else {
 267:source\lcd/print.c ****                      while (is_digit(ch)) {
 268:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 269:source\lcd/print.c ****                            ch = *fmt++;
 270:source\lcd/print.c ****                      }
 271:source\lcd/print.c ****                   }
 272:source\lcd/print.c ****                   if (t >= 0) flags |= _PRECGIVEN, dr->fpr.precision = t;
 273:source\lcd/print.c ****                }
 274:source\lcd/print.c ****                if (ch == 'l' || ch == 'L') {
 275:source\lcd/print.c ****                   ch = *fmt++;
 276:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 277:source\lcd/print.c ****                      flags |= _LLSPEC;
 278:source\lcd/print.c ****                      ch = *fmt++;
 279:source\lcd/print.c ****                   } else {
 280:source\lcd/print.c ****                     flags |= _LONGSPEC;
 281:source\lcd/print.c ****                   }
 282:source\lcd/print.c ****                } else if (ch == 'h') {
 283:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 284:source\lcd/print.c ****                   ch = *fmt++;
 285:source\lcd/print.c ****                }
 286:source\lcd/print.c ****                switch (ch) {
 287:source\lcd/print.c ****                   case 'c':
 288:source\lcd/print.c ****                   default:
 289:source\lcd/print.c ****                     ch = va_arg(args, int);
 290:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 291:source\lcd/print.c ****                     pre_padding(dr, p);
 292:source\lcd/print.c ****                     xputc(dr, ch, p);
 293:source\lcd/print.c ****                     charcount++;
 294:source\lcd/print.c ****                     post_padding(dr, p);
 295:source\lcd/print.c ****                     continue;
 296:source\lcd/print.c ****                   case 0:     fmt--;
 297:source\lcd/print.c ****                     continue;
 298:source\lcd/print.c ****                   case 'n':
 299:source\lcd/print.c ****                     if (flags & _SHORTSPEC) *va_arg(args, short *) = (short)charcount;
 300:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 301:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 302:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 303:source\lcd/print.c ****                     continue;
 304:source\lcd/print.c ****                   case 's':
 305:source\lcd/print.c ****                   {
 306:source\lcd/print.c ****                     char *str = va_arg(args, char *);
 307:source\lcd/print.c ****                     int i, n;
 308:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 309:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 310:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 311:source\lcd/print.c ****                     } else n = strlen(str);
 312:source\lcd/print.c ****                     width -= n;
 313:source\lcd/print.c ****                     pre_padding(dr, p);
 314:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 315:source\lcd/print.c ****                     charcount += n;
 316:source\lcd/print.c ****                     post_padding(dr, p);
 317:source\lcd/print.c ****                   }
 318:source\lcd/print.c ****                     continue;
 319:source\lcd/print.c ****                   case 'X':
 320:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 321:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 322:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 323:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 324:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 325:source\lcd/print.c ****                     break;
 326:source\lcd/print.c ****                   case 'x':
 327:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 328:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 329:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 330:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 331:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 332:source\lcd/print.c ****                     break;
 333:source\lcd/print.c ****                   case 'p':
 334:source\lcd/print.c ****                     v = (unsigned int)va_arg(args, void *);
 335:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 336:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 337:source\lcd/print.c ****                     dr->fpr.precision = 8;
 338:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 339:source\lcd/print.c ****                     break;
 340:source\lcd/print.c ****                   case 'o':
 341:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 342:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 343:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 344:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 345:source\lcd/print.c ****                     break;
 346:source\lcd/print.c ****                   case 'u':
 347:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 348:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 349:source\lcd/print.c ****                     dr->fpr.prefix = "";
 350:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 351:source\lcd/print.c ****                     break;
 352:source\lcd/print.c ****                   case 'i':
 353:source\lcd/print.c ****                   case 'd':
 354:source\lcd/print.c ****                   {
 355:source\lcd/print.c ****                     int w;
 356:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 357:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 358:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 359:source\lcd/print.c ****                           dr->llval = -dr->llval;
 360:source\lcd/print.c ****                           w = -1;
 361:source\lcd/print.c ****                        } else w = 0;
 362:source\lcd/print.c ****                     } else {
 363:source\lcd/print.c ****                        w = va_arg(args, int);
 364:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 365:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 366:source\lcd/print.c ****                     }
 367:source\lcd/print.c ****                     dr->fpr.prefix = (w < 0) ? "-" : (flags & _SIGNED) ? "+" : (flags & _BLANKER) ?
 368:source\lcd/print.c ****                   }
 369:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 370:source\lcd/print.c ****                     break;
 371:source\lcd/print.c ****                   case 'f':
 372:source\lcd/print.c ****                   case 'e':
 373:source\lcd/print.c ****                   case 'E':
 374:source\lcd/print.c ****                   case 'g':
 375:source\lcd/print.c ****                   case 'G':
 376:source\lcd/print.c ****                     // Not SUPPORT
 377:source\lcd/print.c ****                     flags |= _FPCONV;
 378:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 379:source\lcd/print.c ****                     {
 380:source\lcd/print.c ****                     //int w = va_arg(args, int);
 381:source\lcd/print.c ****                     va_arg(args, int);
 382:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 383:source\lcd/print.c ****                     }
 384:source\lcd/print.c ****                     break;
 385:source\lcd/print.c ****                }
 386:source\lcd/print.c ****                dr->width = width;
 387:source\lcd/print.c ****                dr->fpr.flags = flags;
 388:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 389:source\lcd/print.c ****                continue;
 390:source\lcd/print.c ****             }
 391:source\lcd/print.c ****       }
 392:source\lcd/print.c ****       return dr->ferror(p) ? 0 : charcount;
 215              		.loc 1 392 7 is_stmt 1 view .LVU41
 216              		.loc 1 392 14 is_stmt 0 view .LVU42
 217 001a AB6A     		ldr	r3, [r5, #40]
 218 001c 4846     		mov	r0, r9
 219 001e 9847     		blx	r3
 220              	.LVL17:
 393:source\lcd/print.c **** }
 221              		.loc 1 393 1 view .LVU43
 222 0020 019B     		ldr	r3, [sp, #4]
 223 0022 0028     		cmp	r0, #0
 224 0024 18BF     		it	ne
 225 0026 2346     		movne	r3, r4
 226 0028 1846     		mov	r0, r3
 227 002a 11B0     		add	sp, sp, #68
 228              		.cfi_remember_state
 229              		.cfi_def_cfa_offset 36
 230              		@ sp needed
 231 002c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 232              	.LVL18:
 233              	.L137:
 234              		.cfi_restore_state
 220:source\lcd/print.c ****       	    if (ch != '%') {
 235              		.loc 1 220 12 is_stmt 1 view .LVU44
 220:source\lcd/print.c ****       	    if (ch != '%') {
 236              		.loc 1 220 15 is_stmt 0 view .LVU45
 237 0030 252C     		cmp	r4, #37
 238 0032 0AD0     		beq	.L139
 221:source\lcd/print.c ****       	       charcount++;
 239              		.loc 1 221 15 is_stmt 1 view .LVU46
 240 0034 6B6A     		ldr	r3, [r5, #36]
 241 0036 4946     		mov	r1, r9
 242 0038 2046     		mov	r0, r4
 243 003a 9847     		blx	r3
 244              	.LVL19:
 222:source\lcd/print.c ****       	    } else {
 245              		.loc 1 222 15 view .LVU47
 222:source\lcd/print.c ****       	    } else {
 246              		.loc 1 222 24 is_stmt 0 view .LVU48
 247 003c 019B     		ldr	r3, [sp, #4]
 248 003e 0133     		adds	r3, r3, #1
 249 0040 0193     		str	r3, [sp, #4]
 250              	.LVL20:
 222:source\lcd/print.c ****       	    } else {
 251              		.loc 1 222 24 view .LVU49
 252 0042 4646     		mov	r6, r8
 219:source\lcd/print.c ****       	    if (ch != '%') {
 253              		.loc 1 219 24 view .LVU50
 254 0044 D346     		mov	fp, r10
 255              	.LVL21:
 256              	.L8:
 219:source\lcd/print.c ****       	    if (ch != '%') {
 257              		.loc 1 219 24 view .LVU51
 258 0046 B046     		mov	r8, r6
 259 0048 E3E7     		b	.L6
 260              	.LVL22:
 261              	.L139:
 262              	.LBB40:
 224:source\lcd/print.c ****                unsigned int v = 0;
 263              		.loc 1 224 19 view .LVU52
 264 004a 0024     		movs	r4, #0
 265              	.LVL23:
 224:source\lcd/print.c ****                unsigned int v = 0;
 266              		.loc 1 224 19 view .LVU53
 267 004c 0DE0     		b	.L7
 268              	.LVL24:
 269              	.L10:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 270              		.loc 1 227 20 view .LVU54
 271 004e 2D2B     		cmp	r3, #45
 272 0050 04D0     		beq	.L14
 273 0052 302B     		cmp	r3, #48
 274 0054 13D1     		bne	.L13
 236:source\lcd/print.c ****                         continue;
 275              		.loc 1 236 35 is_stmt 1 view .LVU55
 236:source\lcd/print.c ****                         continue;
 276              		.loc 1 236 41 is_stmt 0 view .LVU56
 277 0056 44F48074 		orr	r4, r4, #256
 278              	.LVL25:
 237:source\lcd/print.c ****                       default:
 279              		.loc 1 237 25 is_stmt 1 view .LVU57
 280 005a 05E0     		b	.L16
 281              	.L14:
 228:source\lcd/print.c ****                         continue;
 282              		.loc 1 228 35 view .LVU58
 228:source\lcd/print.c ****                         continue;
 283              		.loc 1 228 53 is_stmt 0 view .LVU59
 284 005c 24F48074 		bic	r4, r4, #256
 285              	.LVL26:
 228:source\lcd/print.c ****                         continue;
 286              		.loc 1 228 53 view .LVU60
 287 0060 24F00104 		bic	r4, r4, #1
 228:source\lcd/print.c ****                         continue;
 288              		.loc 1 228 41 view .LVU61
 289 0064 44F00104 		orr	r4, r4, #1
 290              	.LVL27:
 229:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 291              		.loc 1 229 25 is_stmt 1 view .LVU62
 292              	.L16:
 229:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 293              		.loc 1 229 25 is_stmt 0 view .LVU63
 294              	.LBE40:
 217:source\lcd/print.c ****       int ch, charcount = 0;
 295              		.loc 1 217 1 view .LVU64
 296 0068 DA46     		mov	r10, fp
 297              	.LVL28:
 298              	.L7:
 299              	.LBB90:
 226:source\lcd/print.c ****                    switch (ch = *fmt++) {
 300              		.loc 1 226 16 is_stmt 1 view .LVU65
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 301              		.loc 1 227 20 view .LVU66
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 302              		.loc 1 227 37 is_stmt 0 view .LVU67
 303 006a D346     		mov	fp, r10
 304              	.LVL29:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 305              		.loc 1 227 33 view .LVU68
 306 006c 1BF8013B 		ldrb	r3, [fp], #1	@ zero_extendqisi2
 307              	.LVL30:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 308              		.loc 1 227 20 view .LVU69
 309 0070 2B2B     		cmp	r3, #43
 310 0072 23D0     		beq	.L9
 311 0074 EBD8     		bhi	.L10
 312 0076 202B     		cmp	r3, #32
 313 0078 23D0     		beq	.L11
 314 007a 232B     		cmp	r3, #35
 315 007c 24D0     		beq	.L12
 316              	.L13:
 239:source\lcd/print.c ****                    }
 317              		.loc 1 239 25 is_stmt 1 view .LVU70
 241:source\lcd/print.c ****                }
 318              		.loc 1 241 20 view .LVU71
 319              	.LBB41:
 244:source\lcd/print.c ****                if (ch == '*') {
 320              		.loc 1 244 16 view .LVU72
 321              	.LVL31:
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 322              		.loc 1 245 16 view .LVU73
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 323              		.loc 1 245 19 is_stmt 0 view .LVU74
 324 007e 2A2B     		cmp	r3, #42
 325 0080 2ED1     		bne	.L140
 246:source\lcd/print.c ****                   if (t < 0) {
 326              		.loc 1 246 19 is_stmt 1 view .LVU75
 327              	.LVL32:
 246:source\lcd/print.c ****                   if (t < 0) {
 328              		.loc 1 246 21 is_stmt 0 view .LVU76
 329 0082 58F8047B 		ldr	r7, [r8], #4
 330              	.LVL33:
 247:source\lcd/print.c ****                      t = - t;
 331              		.loc 1 247 19 is_stmt 1 view .LVU77
 251:source\lcd/print.c ****                } else {
 332              		.loc 1 251 22 is_stmt 0 view .LVU78
 333 0086 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 334              	.LVL34:
 247:source\lcd/print.c ****                      t = - t;
 335              		.loc 1 247 22 view .LVU79
 336 008a 002F     		cmp	r7, #0
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 337              		.loc 1 248 22 is_stmt 1 view .LVU80
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 338              		.loc 1 248 24 is_stmt 0 view .LVU81
 339 008c BCBF     		itt	lt
 340 008e 7F42     		rsblt	r7, r7, #0
 341              	.LVL35:
 249:source\lcd/print.c ****                   }
 342              		.loc 1 249 22 is_stmt 1 view .LVU82
 249:source\lcd/print.c ****                   }
 343              		.loc 1 249 28 is_stmt 0 view .LVU83
 344 0090 84F00104 		eorlt	r4, r4, #1
 345              	.LVL36:
 251:source\lcd/print.c ****                } else {
 346              		.loc 1 251 19 is_stmt 1 view .LVU84
 251:source\lcd/print.c ****                } else {
 347              		.loc 1 251 28 is_stmt 0 view .LVU85
 348 0094 0AF1020B 		add	fp, r10, #2
 349              	.LVL37:
 350              	.L19:
 258:source\lcd/print.c ****                }
 351              		.loc 1 258 16 is_stmt 1 view .LVU86
 258:source\lcd/print.c ****                }
 352              		.loc 1 258 16 is_stmt 0 view .LVU87
 353              	.LBE41:
 260:source\lcd/print.c ****                   int t = 0;
 354              		.loc 1 260 16 is_stmt 1 view .LVU88
 260:source\lcd/print.c ****                   int t = 0;
 355              		.loc 1 260 19 is_stmt 0 view .LVU89
 356 0098 2E2B     		cmp	r3, #46
 357 009a 2DD1     		bne	.L21
 358              	.LBB44:
 261:source\lcd/print.c ****                   ch = *fmt++;
 359              		.loc 1 261 19 is_stmt 1 view .LVU90
 360              	.LVL38:
 262:source\lcd/print.c ****                   if (ch == '*') {
 361              		.loc 1 262 19 view .LVU91
 262:source\lcd/print.c ****                   if (ch == '*') {
 362              		.loc 1 262 22 is_stmt 0 view .LVU92
 363 009c 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 364              	.LVL39:
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 365              		.loc 1 263 19 is_stmt 1 view .LVU93
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 366              		.loc 1 263 22 is_stmt 0 view .LVU94
 367 00a0 2A2B     		cmp	r3, #42
 368 00a2 20D0     		beq	.L22
 262:source\lcd/print.c ****                   if (ch == '*') {
 369              		.loc 1 262 28 view .LVU95
 370 00a4 0BF10101 		add	r1, fp, #1
 371              	.LVL40:
 261:source\lcd/print.c ****                   ch = *fmt++;
 372              		.loc 1 261 23 view .LVU96
 373 00a8 0022     		movs	r2, #0
 268:source\lcd/print.c ****                            ch = *fmt++;
 374              		.loc 1 268 33 view .LVU97
 375 00aa 0A26     		movs	r6, #10
 376              	.LVL41:
 377              	.L23:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 378              		.loc 1 267 28 is_stmt 1 view .LVU98
 379              	.LBB45:
 380              	.LBI45:
 102:source\lcd/print.c **** {
 381              		.loc 1 102 5 view .LVU99
 382              	.LBB46:
 104:source\lcd/print.c **** }
 383              		.loc 1 104 7 view .LVU100
 104:source\lcd/print.c **** }
 384              		.loc 1 104 31 is_stmt 0 view .LVU101
 385 00ac A3F13000 		sub	r0, r3, #48
 386              	.LVL42:
 104:source\lcd/print.c **** }
 387              		.loc 1 104 31 view .LVU102
 388              	.LBE46:
 389              	.LBE45:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 390              		.loc 1 267 28 view .LVU103
 391 00b0 0928     		cmp	r0, #9
 392 00b2 56D9     		bls	.L25
 393              	.LVL43:
 394              	.L24:
 272:source\lcd/print.c ****                }
 395              		.loc 1 272 31 is_stmt 1 discriminator 1 view .LVU104
 272:source\lcd/print.c ****                }
 396              		.loc 1 272 37 is_stmt 0 discriminator 1 view .LVU105
 397 00b4 44F01004 		orr	r4, r4, #16
 398              	.LVL44:
 272:source\lcd/print.c ****                }
 399              		.loc 1 272 70 discriminator 1 view .LVU106
 400 00b8 AA60     		str	r2, [r5, #8]
 401 00ba 1CE0     		b	.L209
 402              	.LVL45:
 403              	.L9:
 272:source\lcd/print.c ****                }
 404              		.loc 1 272 70 discriminator 1 view .LVU107
 405              	.LBE44:
 230:source\lcd/print.c ****                         continue;
 406              		.loc 1 230 35 is_stmt 1 view .LVU108
 230:source\lcd/print.c ****                         continue;
 407              		.loc 1 230 41 is_stmt 0 view .LVU109
 408 00bc 44F00204 		orr	r4, r4, #2
 409              	.LVL46:
 231:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 410              		.loc 1 231 25 is_stmt 1 view .LVU110
 411 00c0 D2E7     		b	.L16
 412              	.L11:
 232:source\lcd/print.c ****                         continue;
 413              		.loc 1 232 35 view .LVU111
 232:source\lcd/print.c ****                         continue;
 414              		.loc 1 232 41 is_stmt 0 view .LVU112
 415 00c2 44F00404 		orr	r4, r4, #4
 416              	.LVL47:
 233:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 417              		.loc 1 233 25 is_stmt 1 view .LVU113
 418 00c6 CFE7     		b	.L16
 419              	.L12:
 234:source\lcd/print.c ****                         continue;
 420              		.loc 1 234 35 view .LVU114
 234:source\lcd/print.c ****                         continue;
 421              		.loc 1 234 41 is_stmt 0 view .LVU115
 422 00c8 44F00804 		orr	r4, r4, #8
 423              	.LVL48:
 235:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 424              		.loc 1 235 25 is_stmt 1 view .LVU116
 425 00cc CCE7     		b	.L16
 426              	.LVL49:
 427              	.L20:
 428              	.LBB47:
 254:source\lcd/print.c ****                         ch = *fmt++;
 429              		.loc 1 254 25 view .LVU117
 255:source\lcd/print.c ****                   }
 430              		.loc 1 255 28 is_stmt 0 view .LVU118
 431 00ce 1BF8013B 		ldrb	r3, [fp], #1	@ zero_extendqisi2
 432              	.LVL50:
 254:source\lcd/print.c ****                         ch = *fmt++;
 433              		.loc 1 254 27 view .LVU119
 434 00d2 01FB0727 		mla	r7, r1, r7, r2
 435              	.LVL51:
 255:source\lcd/print.c ****                   }
 436              		.loc 1 255 25 is_stmt 1 view .LVU120
 437              	.L17:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 438              		.loc 1 253 25 view .LVU121
 439              	.LBB42:
 440              	.LBI42:
 102:source\lcd/print.c **** {
 441              		.loc 1 102 5 view .LVU122
 442              	.LBB43:
 104:source\lcd/print.c **** }
 443              		.loc 1 104 7 view .LVU123
 104:source\lcd/print.c **** }
 444              		.loc 1 104 31 is_stmt 0 view .LVU124
 445 00d6 A3F13002 		sub	r2, r3, #48
 446              	.LVL52:
 104:source\lcd/print.c **** }
 447              		.loc 1 104 31 view .LVU125
 448              	.LBE43:
 449              	.LBE42:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 450              		.loc 1 253 25 view .LVU126
 451 00da 092A     		cmp	r2, #9
 452 00dc F7D9     		bls	.L20
 453 00de DBE7     		b	.L19
 454              	.LVL53:
 455              	.L140:
 244:source\lcd/print.c ****                if (ch == '*') {
 456              		.loc 1 244 20 view .LVU127
 457 00e0 0027     		movs	r7, #0
 254:source\lcd/print.c ****                         ch = *fmt++;
 458              		.loc 1 254 30 view .LVU128
 459 00e2 0A21     		movs	r1, #10
 460 00e4 F7E7     		b	.L17
 461              	.LVL54:
 462              	.L22:
 254:source\lcd/print.c ****                         ch = *fmt++;
 463              		.loc 1 254 30 view .LVU129
 464              	.LBE47:
 465              	.LBB48:
 264:source\lcd/print.c ****                      ch = *fmt++;
 466              		.loc 1 264 22 is_stmt 1 view .LVU130
 264:source\lcd/print.c ****                      ch = *fmt++;
 467              		.loc 1 264 24 is_stmt 0 view .LVU131
 468 00e6 58F8042B 		ldr	r2, [r8], #4
 469              	.LVL55:
 265:source\lcd/print.c ****                   } else {
 470              		.loc 1 265 22 is_stmt 1 view .LVU132
 265:source\lcd/print.c ****                   } else {
 471              		.loc 1 265 25 is_stmt 0 view .LVU133
 472 00ea 9BF80130 		ldrb	r3, [fp, #1]	@ zero_extendqisi2
 473              	.LVL56:
 272:source\lcd/print.c ****                }
 474              		.loc 1 272 22 view .LVU134
 475 00ee 002A     		cmp	r2, #0
 265:source\lcd/print.c ****                   } else {
 476              		.loc 1 265 31 view .LVU135
 477 00f0 0BF10201 		add	r1, fp, #2
 478              	.LVL57:
 272:source\lcd/print.c ****                }
 479              		.loc 1 272 19 is_stmt 1 view .LVU136
 272:source\lcd/print.c ****                }
 480              		.loc 1 272 22 is_stmt 0 view .LVU137
 481 00f4 DEDA     		bge	.L24
 482              	.L209:
 272:source\lcd/print.c ****                }
 483              		.loc 1 272 70 discriminator 1 view .LVU138
 484 00f6 8B46     		mov	fp, r1
 485              	.LVL58:
 486              	.L21:
 272:source\lcd/print.c ****                }
 487              		.loc 1 272 70 discriminator 1 view .LVU139
 488              	.LBE48:
 274:source\lcd/print.c ****                   ch = *fmt++;
 489              		.loc 1 274 16 is_stmt 1 view .LVU140
 274:source\lcd/print.c ****                   ch = *fmt++;
 490              		.loc 1 274 30 is_stmt 0 view .LVU141
 491 00f8 23F02002 		bic	r2, r3, #32
 492 00fc 4C2A     		cmp	r2, #76
 493 00fe 35D1     		bne	.L26
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 494              		.loc 1 275 19 is_stmt 1 view .LVU142
 495              	.LVL59:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 496              		.loc 1 275 24 is_stmt 0 view .LVU143
 497 0100 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 498              	.LVL60:
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 499              		.loc 1 276 19 is_stmt 1 view .LVU144
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 500              		.loc 1 276 33 is_stmt 0 view .LVU145
 501 0104 03F0DF02 		and	r2, r3, #223
 502 0108 4C2A     		cmp	r2, #76
 277:source\lcd/print.c ****                      ch = *fmt++;
 503              		.loc 1 277 22 is_stmt 1 view .LVU146
 278:source\lcd/print.c ****                   } else {
 504              		.loc 1 278 25 is_stmt 0 view .LVU147
 505 010a 03BF     		ittte	eq
 506 010c 9BF80130 		ldrbeq	r3, [fp, #1]	@ zero_extendqisi2
 507              	.LVL61:
 277:source\lcd/print.c ****                      ch = *fmt++;
 508              		.loc 1 277 28 view .LVU148
 509 0110 44F04004 		orreq	r4, r4, #64
 510              	.LVL62:
 278:source\lcd/print.c ****                   } else {
 511              		.loc 1 278 22 is_stmt 1 view .LVU149
 278:source\lcd/print.c ****                   } else {
 512              		.loc 1 278 31 is_stmt 0 view .LVU150
 513 0114 0BF1020B 		addeq	fp, fp, #2
 514              	.LVL63:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 515              		.loc 1 275 28 view .LVU151
 516 0118 0BF1010B 		addne	fp, fp, #1
 280:source\lcd/print.c ****                   }
 517              		.loc 1 280 21 is_stmt 1 view .LVU152
 280:source\lcd/print.c ****                   }
 518              		.loc 1 280 27 is_stmt 0 view .LVU153
 519 011c 18BF     		it	ne
 520 011e 44F02004 		orrne	r4, r4, #32
 521              	.LVL64:
 522              	.L28:
 286:source\lcd/print.c ****                   case 'c':
 523              		.loc 1 286 16 is_stmt 1 view .LVU154
 524 0122 782B     		cmp	r3, #120
 525 0124 74DC     		bgt	.L29
 286:source\lcd/print.c ****                   case 'c':
 526              		.loc 1 286 16 is_stmt 0 view .LVU155
 527 0126 572B     		cmp	r3, #87
 528 0128 29DC     		bgt	.L30
 529 012a 002B     		cmp	r3, #0
 530 012c 00F0B180 		beq	.L31
 531 0130 23F00202 		bic	r2, r3, #2
 532 0134 452A     		cmp	r2, #69
 533 0136 6BD1     		bne	.L29
 534              	.L32:
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 535              		.loc 1 377 21 is_stmt 1 view .LVU156
 378:source\lcd/print.c ****                     {
 536              		.loc 1 378 24 is_stmt 0 view .LVU157
 537 0138 E006     		lsls	r0, r4, #27
 378:source\lcd/print.c ****                     {
 538              		.loc 1 378 66 view .LVU158
 539 013a 5CBF     		itt	pl
 540 013c 0622     		movpl	r2, #6
 541 013e AA60     		strpl	r2, [r5, #8]
 382:source\lcd/print.c ****                     }
 542              		.loc 1 382 60 view .LVU159
 543 0140 A207     		lsls	r2, r4, #30
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 544              		.loc 1 377 27 view .LVU160
 545 0142 44F40071 		orr	r1, r4, #512
 546              	.LVL65:
 378:source\lcd/print.c ****                     {
 547              		.loc 1 378 21 is_stmt 1 view .LVU161
 378:source\lcd/print.c ****                     {
 548              		.loc 1 378 48 view .LVU162
 381:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 549              		.loc 1 381 21 view .LVU163
 550 0146 08F10406 		add	r6, r8, #4
 551              	.LVL66:
 382:source\lcd/print.c ****                     }
 552              		.loc 1 382 21 view .LVU164
 382:source\lcd/print.c ****                     }
 553              		.loc 1 382 60 is_stmt 0 view .LVU165
 554 014a 00F1D881 		bmi	.L152
 382:source\lcd/print.c ****                     }
 555              		.loc 1 382 85 discriminator 1 view .LVU166
 556 014e B648     		ldr	r0, .L219
 557 0150 B64A     		ldr	r2, .L219+4
 558 0152 14F0040F 		tst	r4, #4
 559 0156 08BF     		it	eq
 560 0158 0246     		moveq	r2, r0
 561              	.L86:
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 562              		.loc 1 377 27 discriminator 8 view .LVU167
 563 015a 0C46     		mov	r4, r1
 382:source\lcd/print.c ****                     }
 564              		.loc 1 382 36 discriminator 8 view .LVU168
 565 015c 6A60     		str	r2, [r5, #4]
 384:source\lcd/print.c ****                }
 566              		.loc 1 384 21 is_stmt 1 discriminator 8 view .LVU169
 225:source\lcd/print.c ****                for (;;) {
 567              		.loc 1 225 29 is_stmt 0 discriminator 8 view .LVU170
 568 015e 0021     		movs	r1, #0
 569              	.LVL67:
 384:source\lcd/print.c ****                }
 570              		.loc 1 384 21 discriminator 8 view .LVU171
 571 0160 3FE1     		b	.L67
 572              	.LVL68:
 573              	.L25:
 574              	.LBB49:
 268:source\lcd/print.c ****                            ch = *fmt++;
 575              		.loc 1 268 28 is_stmt 1 view .LVU172
 269:source\lcd/print.c ****                      }
 576              		.loc 1 269 31 is_stmt 0 view .LVU173
 577 0162 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 578              	.LVL69:
 268:source\lcd/print.c ****                            ch = *fmt++;
 579              		.loc 1 268 30 view .LVU174
 580 0166 06FB0202 		mla	r2, r6, r2, r0
 581              	.LVL70:
 269:source\lcd/print.c ****                      }
 582              		.loc 1 269 28 is_stmt 1 view .LVU175
 269:source\lcd/print.c ****                      }
 583              		.loc 1 269 28 is_stmt 0 view .LVU176
 584 016a 9FE7     		b	.L23
 585              	.LVL71:
 586              	.L26:
 269:source\lcd/print.c ****                      }
 587              		.loc 1 269 28 view .LVU177
 588              	.LBE49:
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 589              		.loc 1 282 23 is_stmt 1 view .LVU178
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 590              		.loc 1 282 26 is_stmt 0 view .LVU179
 591 016c 682B     		cmp	r3, #104
 283:source\lcd/print.c ****                   ch = *fmt++;
 592              		.loc 1 283 19 is_stmt 1 view .LVU180
 284:source\lcd/print.c ****                }
 593              		.loc 1 284 28 is_stmt 0 view .LVU181
 594 016e 01BF     		itttt	eq
 595 0170 5946     		moveq	r1, fp
 283:source\lcd/print.c ****                   ch = *fmt++;
 596              		.loc 1 283 25 view .LVU182
 597 0172 44F08004 		orreq	r4, r4, #128
 598              	.LVL72:
 284:source\lcd/print.c ****                }
 599              		.loc 1 284 19 is_stmt 1 view .LVU183
 284:source\lcd/print.c ****                }
 600              		.loc 1 284 22 is_stmt 0 view .LVU184
 601 0176 11F8013B 		ldrbeq	r3, [r1], #1	@ zero_extendqisi2
 602              	.LVL73:
 284:source\lcd/print.c ****                }
 603              		.loc 1 284 28 view .LVU185
 604 017a 8B46     		moveq	fp, r1
 284:source\lcd/print.c ****                }
 605              		.loc 1 284 28 view .LVU186
 606 017c D1E7     		b	.L28
 607              	.LVL74:
 608              	.L30:
 286:source\lcd/print.c ****                   case 'c':
 609              		.loc 1 286 16 view .LVU187
 610 017e A3F15802 		sub	r2, r3, #88
 611 0182 202A     		cmp	r2, #32
 612 0184 44D8     		bhi	.L29
 613 0186 01A1     		adr	r1, .L34
 614 0188 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 615              		.p2align 2
 616              	.L34:
 617 018c 59030000 		.word	.L41+1
 618 0190 11020000 		.word	.L29+1
 619 0194 11020000 		.word	.L29+1
 620 0198 11020000 		.word	.L29+1
 621 019c 11020000 		.word	.L29+1
 622 01a0 11020000 		.word	.L29+1
 623 01a4 11020000 		.word	.L29+1
 624 01a8 11020000 		.word	.L29+1
 625 01ac 11020000 		.word	.L29+1
 626 01b0 11020000 		.word	.L29+1
 627 01b4 11020000 		.word	.L29+1
 628 01b8 11020000 		.word	.L29+1
 629 01bc A5040000 		.word	.L40+1
 630 01c0 39010000 		.word	.L32+1
 631 01c4 39010000 		.word	.L32+1
 632 01c8 39010000 		.word	.L32+1
 633 01cc 11020000 		.word	.L29+1
 634 01d0 A5040000 		.word	.L40+1
 635 01d4 11020000 		.word	.L29+1
 636 01d8 11020000 		.word	.L29+1
 637 01dc 11020000 		.word	.L29+1
 638 01e0 11020000 		.word	.L29+1
 639 01e4 9B020000 		.word	.L39+1
 640 01e8 45040000 		.word	.L38+1
 641 01ec C3030000 		.word	.L37+1
 642 01f0 11020000 		.word	.L29+1
 643 01f4 11020000 		.word	.L29+1
 644 01f8 BD020000 		.word	.L36+1
 645 01fc 11020000 		.word	.L29+1
 646 0200 73040000 		.word	.L35+1
 647 0204 11020000 		.word	.L29+1
 648 0208 11020000 		.word	.L29+1
 649 020c 93030000 		.word	.L33+1
 650              		.p2align 1
 651              	.L29:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 652              		.loc 1 289 21 is_stmt 1 view .LVU188
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 653              		.loc 1 289 24 is_stmt 0 view .LVU189
 654 0210 4646     		mov	r6, r8
 655              	.LVL75:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 656              		.loc 1 291 21 view .LVU190
 657 0212 14F0010A 		ands	r10, r4, #1
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 658              		.loc 1 289 24 view .LVU191
 659 0216 56F8042B 		ldr	r2, [r6], #4
 660              	.LVL76:
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 661              		.loc 1 290 21 is_stmt 1 view .LVU192
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 662              		.loc 1 290 26 is_stmt 0 view .LVU193
 663 021a 07F1FF38 		add	r8, r7, #-1
 664              	.LVL77:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 665              		.loc 1 291 21 is_stmt 1 view .LVU194
 666 021e 18D1     		bne	.L42
 667              	.LBB50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 668              		.loc 1 291 21 discriminator 1 view .LVU195
 669 0220 14F4807F 		tst	r4, #256
 670 0224 14BF     		ite	ne
 671 0226 3024     		movne	r4, #48
 672              	.LVL78:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 673              		.loc 1 291 21 is_stmt 0 discriminator 1 view .LVU196
 674 0228 2024     		moveq	r4, #32
 675              	.LVL79:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 676              		.loc 1 291 21 is_stmt 1 discriminator 1 view .LVU197
 677              	.L44:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 678              		.loc 1 291 21 discriminator 7 view .LVU198
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 679              		.loc 1 291 21 is_stmt 0 discriminator 7 view .LVU199
 680 022a B8F10108 		subs	r8, r8, #1
 681              	.LVL80:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 682              		.loc 1 291 21 discriminator 7 view .LVU200
 683 022e 6B6A     		ldr	r3, [r5, #36]
 684 0230 1CD5     		bpl	.L45
 685 0232 012F     		cmp	r7, #1
 686 0234 3B46     		mov	r3, r7
 687 0236 0199     		ldr	r1, [sp, #4]
 688 0238 B8BF     		it	lt
 689 023a 0123     		movlt	r3, #1
 690 023c 013B     		subs	r3, r3, #1
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 691              		.loc 1 291 21 view .LVU201
 692 023e 002F     		cmp	r7, #0
 693 0240 C7F10108 		rsb	r8, r7, #1
 694              	.LVL81:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 695              		.loc 1 291 21 view .LVU202
 696 0244 1944     		add	r1, r1, r3
 697 0246 D8BF     		it	le
 698 0248 4FF00008 		movle	r8, #0
 699 024c 023F     		subs	r7, r7, #2
 700              	.LVL82:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 701              		.loc 1 291 21 view .LVU203
 702 024e 0191     		str	r1, [sp, #4]
 703 0250 B844     		add	r8, r8, r7
 704              	.LVL83:
 705              	.L42:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 706              		.loc 1 291 21 is_stmt 1 discriminator 10 view .LVU204
 707              	.LBE50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 708              		.loc 1 291 39 discriminator 10 view .LVU205
 292:source\lcd/print.c ****                     charcount++;
 709              		.loc 1 292 21 discriminator 10 view .LVU206
 710 0252 6B6A     		ldr	r3, [r5, #36]
 711 0254 4946     		mov	r1, r9
 712 0256 1046     		mov	r0, r2
 713 0258 9847     		blx	r3
 714              	.LVL84:
 293:source\lcd/print.c ****                     post_padding(dr, p);
 715              		.loc 1 293 21 discriminator 10 view .LVU207
 293:source\lcd/print.c ****                     post_padding(dr, p);
 716              		.loc 1 293 30 is_stmt 0 discriminator 10 view .LVU208
 717 025a 019B     		ldr	r3, [sp, #4]
 718 025c 0133     		adds	r3, r3, #1
 719 025e 0193     		str	r3, [sp, #4]
 720              	.LVL85:
 294:source\lcd/print.c ****                     continue;
 721              		.loc 1 294 21 is_stmt 1 discriminator 10 view .LVU209
 722 0260 BAF1000F 		cmp	r10, #0
 723 0264 3FF4EFAE 		beq	.L8
 724 0268 4446     		mov	r4, r8
 725 026a 09E0     		b	.L46
 726              	.LVL86:
 727              	.L45:
 728              	.LBB51:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 729              		.loc 1 291 21 is_stmt 0 discriminator 9 view .LVU210
 730 026c 4946     		mov	r1, r9
 731 026e 2046     		mov	r0, r4
 732 0270 0292     		str	r2, [sp, #8]
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 733              		.loc 1 291 21 is_stmt 1 discriminator 9 view .LVU211
 734 0272 9847     		blx	r3
 735              	.LVL87:
 736 0274 029A     		ldr	r2, [sp, #8]
 737 0276 D8E7     		b	.L44
 738              	.LVL88:
 739              	.L47:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 740              		.loc 1 291 21 is_stmt 0 discriminator 9 view .LVU212
 741              	.LBE51:
 294:source\lcd/print.c ****                     continue;
 742              		.loc 1 294 21 is_stmt 1 discriminator 4 view .LVU213
 743 0278 6B6A     		ldr	r3, [r5, #36]
 744 027a 4946     		mov	r1, r9
 745 027c 2020     		movs	r0, #32
 746 027e 9847     		blx	r3
 747              	.LVL89:
 748              	.L46:
 294:source\lcd/print.c ****                     continue;
 749              		.loc 1 294 21 discriminator 3 view .LVU214
 294:source\lcd/print.c ****                     continue;
 750              		.loc 1 294 21 is_stmt 0 discriminator 3 view .LVU215
 751 0280 013C     		subs	r4, r4, #1
 752              	.LVL90:
 294:source\lcd/print.c ****                     continue;
 753              		.loc 1 294 21 discriminator 3 view .LVU216
 754 0282 F9D5     		bpl	.L47
 755 0284 019B     		ldr	r3, [sp, #4]
 756 0286 B8F1000F 		cmp	r8, #0
 757 028a A8BF     		it	ge
 758 028c 4344     		addge	r3, r3, r8
 759              	.LVL91:
 760              	.L213:
 388:source\lcd/print.c ****                continue;
 761              		.loc 1 388 26 view .LVU217
 762 028e 0193     		str	r3, [sp, #4]
 763              	.LVL92:
 389:source\lcd/print.c ****             }
 764              		.loc 1 389 16 is_stmt 1 view .LVU218
 765 0290 D9E6     		b	.L8
 766              	.LVL93:
 767              	.L31:
 296:source\lcd/print.c ****                     continue;
 768              		.loc 1 296 31 view .LVU219
 296:source\lcd/print.c ****                     continue;
 769              		.loc 1 296 34 is_stmt 0 view .LVU220
 770 0292 0BF1FF3B 		add	fp, fp, #-1
 771              	.LVL94:
 297:source\lcd/print.c ****                   case 'n':
 772              		.loc 1 297 21 is_stmt 1 view .LVU221
 773 0296 4646     		mov	r6, r8
 774 0298 D5E6     		b	.L8
 775              	.L39:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 776              		.loc 1 299 21 view .LVU222
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 777              		.loc 1 299 24 is_stmt 0 view .LVU223
 778 029a 2006     		lsls	r0, r4, #24
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 779              		.loc 1 299 68 view .LVU224
 780 029c D8F80030 		ldr	r3, [r8]
 781              	.LVL95:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 782              		.loc 1 299 70 view .LVU225
 783 02a0 019A     		ldr	r2, [sp, #4]
 784              	.LVL96:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 785              		.loc 1 289 24 view .LVU226
 786 02a2 08F10406 		add	r6, r8, #4
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 787              		.loc 1 299 24 view .LVU227
 788 02a6 01D5     		bpl	.L48
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 789              		.loc 1 299 45 is_stmt 1 view .LVU228
 790              	.LVL97:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 791              		.loc 1 299 70 is_stmt 0 view .LVU229
 792 02a8 1A80     		strh	r2, [r3]	@ movhi
 793 02aa CCE6     		b	.L8
 794              	.LVL98:
 795              	.L48:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 796              		.loc 1 300 26 is_stmt 1 view .LVU230
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 797              		.loc 1 300 29 is_stmt 0 view .LVU231
 798 02ac 6106     		lsls	r1, r4, #25
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 799              		.loc 1 300 47 is_stmt 1 view .LVU232
 800              	.LVL99:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 801              		.loc 1 300 74 is_stmt 0 view .LVU233
 802 02ae 49BF     		itett	mi
 803 02b0 0199     		ldrmi	r1, [sp, #4]
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 804              		.loc 1 301 71 view .LVU234
 805 02b2 1A60     		strpl	r2, [r3]
 806              	.LVL100:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 807              		.loc 1 300 74 view .LVU235
 808 02b4 D217     		asrmi	r2, r2, #31
 809 02b6 C3E90012 		strdmi	r1, r2, [r3]
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 810              		.loc 1 301 26 is_stmt 1 view .LVU236
 811 02ba C4E6     		b	.L8
 812              	.LVL101:
 813              	.L36:
 814              	.LBB52:
 306:source\lcd/print.c ****                     int i, n;
 815              		.loc 1 306 21 view .LVU237
 306:source\lcd/print.c ****                     int i, n;
 816              		.loc 1 306 27 is_stmt 0 view .LVU238
 817 02bc 4646     		mov	r6, r8
 818              	.LVL102:
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 819              		.loc 1 308 24 view .LVU239
 820 02be E306     		lsls	r3, r4, #27
 821              	.LVL103:
 306:source\lcd/print.c ****                     int i, n;
 822              		.loc 1 306 27 view .LVU240
 823 02c0 56F804AB 		ldr	r10, [r6], #4
 824              	.LVL104:
 307:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 825              		.loc 1 307 21 is_stmt 1 view .LVU241
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 826              		.loc 1 308 21 view .LVU242
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 827              		.loc 1 308 24 is_stmt 0 view .LVU243
 828 02c4 0AD5     		bpl	.L51
 829              	.LBB53:
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 830              		.loc 1 309 24 is_stmt 1 view .LVU244
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 831              		.loc 1 309 28 is_stmt 0 view .LVU245
 832 02c6 AB68     		ldr	r3, [r5, #8]
 833              	.LVL105:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 834              		.loc 1 310 24 is_stmt 1 view .LVU246
 310:source\lcd/print.c ****                     } else n = strlen(str);
 835              		.loc 1 310 31 is_stmt 0 view .LVU247
 836 02c8 4FF00008 		mov	r8, #0
 837              	.LVL106:
 838              	.L52:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 839              		.loc 1 310 36 is_stmt 1 discriminator 3 view .LVU248
 310:source\lcd/print.c ****                     } else n = strlen(str);
 840              		.loc 1 310 24 is_stmt 0 discriminator 3 view .LVU249
 841 02cc 9845     		cmp	r8, r3
 842 02ce 09DA     		bge	.L53
 310:source\lcd/print.c ****                     } else n = strlen(str);
 843              		.loc 1 310 50 discriminator 4 view .LVU250
 844 02d0 1AF80820 		ldrb	r2, [r10, r8]	@ zero_extendqisi2
 845 02d4 32B1     		cbz	r2, .L53
 310:source\lcd/print.c ****                     } else n = strlen(str);
 846              		.loc 1 310 71 is_stmt 1 discriminator 5 view .LVU251
 310:source\lcd/print.c ****                     } else n = strlen(str);
 847              		.loc 1 310 66 discriminator 5 view .LVU252
 310:source\lcd/print.c ****                     } else n = strlen(str);
 848              		.loc 1 310 67 is_stmt 0 discriminator 5 view .LVU253
 849 02d6 08F10108 		add	r8, r8, #1
 850              	.LVL107:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 851              		.loc 1 310 67 discriminator 5 view .LVU254
 852 02da F7E7     		b	.L52
 853              	.LVL108:
 854              	.L51:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 855              		.loc 1 310 67 discriminator 5 view .LVU255
 856              	.LBE53:
 311:source\lcd/print.c ****                     width -= n;
 857              		.loc 1 311 28 is_stmt 1 view .LVU256
 311:source\lcd/print.c ****                     width -= n;
 858              		.loc 1 311 32 is_stmt 0 view .LVU257
 859 02dc 5046     		mov	r0, r10
 860 02de FFF7FEFF 		bl	strlen
 861              	.LVL109:
 311:source\lcd/print.c ****                     width -= n;
 862              		.loc 1 311 32 view .LVU258
 863 02e2 8046     		mov	r8, r0
 864              	.LVL110:
 865              	.L53:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 866              		.loc 1 312 21 is_stmt 1 view .LVU259
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 867              		.loc 1 313 21 is_stmt 0 view .LVU260
 868 02e4 14F00103 		ands	r3, r4, #1
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 869              		.loc 1 312 27 view .LVU261
 870 02e8 A7EB0807 		sub	r7, r7, r8
 871              	.LVL111:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 872              		.loc 1 313 21 is_stmt 1 view .LVU262
 873 02ec 0293     		str	r3, [sp, #8]
 874 02ee 0ED1     		bne	.L55
 875              	.LBB54:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 876              		.loc 1 313 21 discriminator 1 view .LVU263
 877 02f0 14F4807F 		tst	r4, #256
 878 02f4 14BF     		ite	ne
 879 02f6 3023     		movne	r3, #48
 880 02f8 2023     		moveq	r3, #32
 881              	.LVL112:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 882              		.loc 1 313 21 discriminator 1 view .LVU264
 883              	.LBE54:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 884              		.loc 1 312 27 is_stmt 0 discriminator 1 view .LVU265
 885 02fa 3C46     		mov	r4, r7
 886              	.LVL113:
 887              	.L57:
 888              	.LBB55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 889              		.loc 1 313 21 is_stmt 1 discriminator 7 view .LVU266
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 890              		.loc 1 313 21 is_stmt 0 discriminator 7 view .LVU267
 891 02fc 013C     		subs	r4, r4, #1
 892              	.LVL114:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 893              		.loc 1 313 21 discriminator 7 view .LVU268
 894 02fe 13D5     		bpl	.L58
 895 0300 019A     		ldr	r2, [sp, #4]
 896 0302 27EAE773 		bic	r3, r7, r7, asr #31
 897 0306 1A44     		add	r2, r2, r3
 898 0308 013F     		subs	r7, r7, #1
 899 030a 0192     		str	r2, [sp, #4]
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 900              		.loc 1 313 21 view .LVU269
 901 030c FF1A     		subs	r7, r7, r3
 902              	.LVL115:
 903              	.L55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 904              		.loc 1 313 21 is_stmt 1 discriminator 10 view .LVU270
 905              	.LBE55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 906              		.loc 1 313 39 discriminator 10 view .LVU271
 314:source\lcd/print.c ****                     charcount += n;
 907              		.loc 1 314 21 discriminator 10 view .LVU272
 314:source\lcd/print.c ****                     charcount += n;
 908              		.loc 1 314 21 is_stmt 0 discriminator 10 view .LVU273
 909 030e 0AEB0804 		add	r4, r10, r8
 910              	.LVL116:
 911              	.L59:
 314:source\lcd/print.c ****                     charcount += n;
 912              		.loc 1 314 31 is_stmt 1 discriminator 1 view .LVU274
 314:source\lcd/print.c ****                     charcount += n;
 913              		.loc 1 314 21 is_stmt 0 discriminator 1 view .LVU275
 914 0312 5445     		cmp	r4, r10
 915 0314 0FD1     		bne	.L60
 315:source\lcd/print.c ****                     post_padding(dr, p);
 916              		.loc 1 315 21 is_stmt 1 view .LVU276
 315:source\lcd/print.c ****                     post_padding(dr, p);
 917              		.loc 1 315 31 is_stmt 0 view .LVU277
 918 0316 019B     		ldr	r3, [sp, #4]
 919 0318 4344     		add	r3, r3, r8
 920 031a 0193     		str	r3, [sp, #4]
 921              	.LVL117:
 316:source\lcd/print.c ****                   }
 922              		.loc 1 316 21 is_stmt 1 view .LVU278
 923 031c 029B     		ldr	r3, [sp, #8]
 924              	.LVL118:
 316:source\lcd/print.c ****                   }
 925              		.loc 1 316 21 is_stmt 0 view .LVU279
 926 031e 002B     		cmp	r3, #0
 927 0320 3FF491AE 		beq	.L8
 928 0324 3C46     		mov	r4, r7
 929 0326 10E0     		b	.L61
 930              	.LVL119:
 931              	.L58:
 932              	.LBB56:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 933              		.loc 1 313 21 is_stmt 1 discriminator 9 view .LVU280
 934 0328 1846     		mov	r0, r3
 935 032a 6A6A     		ldr	r2, [r5, #36]
 936 032c 0393     		str	r3, [sp, #12]
 937 032e 4946     		mov	r1, r9
 938 0330 9047     		blx	r2
 939              	.LVL120:
 940 0332 039B     		ldr	r3, [sp, #12]
 941 0334 E2E7     		b	.L57
 942              	.LVL121:
 943              	.L60:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 944              		.loc 1 313 21 is_stmt 0 discriminator 9 view .LVU281
 945              	.LBE56:
 314:source\lcd/print.c ****                     charcount += n;
 946              		.loc 1 314 41 is_stmt 1 discriminator 3 view .LVU282
 947 0336 6B6A     		ldr	r3, [r5, #36]
 948 0338 1AF8010B 		ldrb	r0, [r10], #1	@ zero_extendqisi2
 314:source\lcd/print.c ****                     charcount += n;
 949              		.loc 1 314 41 is_stmt 0 discriminator 3 view .LVU283
 950 033c 4946     		mov	r1, r9
 951 033e 9847     		blx	r3
 952              	.LVL122:
 314:source\lcd/print.c ****                     charcount += n;
 953              		.loc 1 314 36 is_stmt 1 discriminator 3 view .LVU284
 314:source\lcd/print.c ****                     charcount += n;
 954              		.loc 1 314 36 is_stmt 0 discriminator 3 view .LVU285
 955 0340 E7E7     		b	.L59
 956              	.LVL123:
 957              	.L62:
 316:source\lcd/print.c ****                   }
 958              		.loc 1 316 21 is_stmt 1 discriminator 4 view .LVU286
 959 0342 6B6A     		ldr	r3, [r5, #36]
 960 0344 4946     		mov	r1, r9
 961 0346 2020     		movs	r0, #32
 962 0348 9847     		blx	r3
 963              	.LVL124:
 964              	.L61:
 316:source\lcd/print.c ****                   }
 965              		.loc 1 316 21 discriminator 3 view .LVU287
 316:source\lcd/print.c ****                   }
 966              		.loc 1 316 21 is_stmt 0 discriminator 3 view .LVU288
 967 034a 013C     		subs	r4, r4, #1
 968              	.LVL125:
 316:source\lcd/print.c ****                   }
 969              		.loc 1 316 21 discriminator 3 view .LVU289
 970 034c F9D5     		bpl	.L62
 971 034e 019B     		ldr	r3, [sp, #4]
 972 0350 002F     		cmp	r7, #0
 973 0352 A8BF     		it	ge
 974 0354 DB19     		addge	r3, r3, r7
 975 0356 9AE7     		b	.L213
 976              	.LVL126:
 977              	.L41:
 316:source\lcd/print.c ****                   }
 978              		.loc 1 316 21 discriminator 3 view .LVU290
 979              	.LBE52:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 980              		.loc 1 320 21 is_stmt 1 view .LVU291
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 981              		.loc 1 320 24 is_stmt 0 view .LVU292
 982 0358 6606     		lsls	r6, r4, #25
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 983              		.loc 1 320 42 is_stmt 1 view .LVU293
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 984              		.loc 1 320 54 is_stmt 0 view .LVU294
 985 035a 43BF     		ittte	mi
 986 035c 08F10706 		addmi	r6, r8, #7
 987 0360 26F00706 		bicmi	r6, r6, #7
 988              	.LVL127:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 989              		.loc 1 320 52 view .LVU295
 990 0364 F6E80201 		ldrdmi	r0, [r6], #8
 991              	.LVL128:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 992              		.loc 1 320 87 view .LVU296
 993 0368 4646     		movpl	r6, r8
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 994              		.loc 1 322 32 view .LVU297
 995 036a 314A     		ldr	r2, .L219+8
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 996              		.loc 1 320 85 view .LVU298
 997 036c 58BF     		it	pl
 998 036e 56F8041B 		ldrpl	r1, [r6], #4
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 999              		.loc 1 322 32 view .LVU299
 1000 0372 EA62     		str	r2, [r5, #44]
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1001              		.loc 1 320 52 view .LVU300
 1002 0374 48BF     		it	mi
 1003 0376 C5E90E01 		strdmi	r0, [r5, #56]
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1004              		.loc 1 323 62 view .LVU301
 1005 037a 2E4A     		ldr	r2, .L219+12
 225:source\lcd/print.c ****                for (;;) {
 1006              		.loc 1 225 29 view .LVU302
 1007 037c 48BF     		it	mi
 1008 037e 0021     		movmi	r1, #0
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1009              		.loc 1 320 83 is_stmt 1 view .LVU303
 1010              	.LVL129:
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 1011              		.loc 1 321 21 view .LVU304
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 1012              		.loc 1 321 24 is_stmt 0 view .LVU305
 1013 0380 2006     		lsls	r0, r4, #24
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 1014              		.loc 1 321 45 is_stmt 1 view .LVU306
 1015 0382 48BF     		it	mi
 1016 0384 89B2     		uxthmi	r1, r1
 1017              	.LVL130:
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 1018              		.loc 1 322 21 view .LVU307
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1019              		.loc 1 323 21 view .LVU308
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1020              		.loc 1 323 62 is_stmt 0 view .LVU309
 1021 0386 14F0080F 		tst	r4, #8
 1022              	.LVL131:
 1023              	.L218:
 1024              	.LBB57:
 367:source\lcd/print.c ****                   }
 1025              		.loc 1 367 105 discriminator 3 view .LVU310
 1026 038a 2748     		ldr	r0, .L219
 1027 038c 08BF     		it	eq
 1028 038e 0246     		moveq	r2, r0
 1029 0390 82E0     		b	.L83
 1030              	.LVL132:
 1031              	.L33:
 367:source\lcd/print.c ****                   }
 1032              		.loc 1 367 105 discriminator 3 view .LVU311
 1033              	.LBE57:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1034              		.loc 1 327 21 is_stmt 1 view .LVU312
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1035              		.loc 1 327 24 is_stmt 0 view .LVU313
 1036 0392 6106     		lsls	r1, r4, #25
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1037              		.loc 1 327 42 is_stmt 1 view .LVU314
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1038              		.loc 1 327 54 is_stmt 0 view .LVU315
 1039 0394 43BF     		ittte	mi
 1040 0396 08F10706 		addmi	r6, r8, #7
 1041 039a 26F00706 		bicmi	r6, r6, #7
 1042              	.LVL133:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1043              		.loc 1 327 52 view .LVU316
 1044 039e F6E80201 		ldrdmi	r0, [r6], #8
 1045              	.LVL134:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1046              		.loc 1 327 87 view .LVU317
 1047 03a2 4646     		movpl	r6, r8
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1048              		.loc 1 327 52 view .LVU318
 1049 03a4 4ABF     		itet	mi
 1050 03a6 C5E90E01 		strdmi	r0, [r5, #56]
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1051              		.loc 1 327 85 view .LVU319
 1052 03aa 56F8041B 		ldrpl	r1, [r6], #4
 225:source\lcd/print.c ****                for (;;) {
 1053              		.loc 1 225 29 view .LVU320
 1054 03ae 0021     		movmi	r1, #0
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1055              		.loc 1 327 83 is_stmt 1 view .LVU321
 1056              	.LVL135:
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1057              		.loc 1 328 21 view .LVU322
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1058              		.loc 1 328 24 is_stmt 0 view .LVU323
 1059 03b0 2206     		lsls	r2, r4, #24
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1060              		.loc 1 328 45 is_stmt 1 view .LVU324
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1061              		.loc 1 329 32 is_stmt 0 view .LVU325
 1062 03b2 214A     		ldr	r2, .L219+16
 1063 03b4 EA62     		str	r2, [r5, #44]
 1064 03b6 48BF     		it	mi
 1065 03b8 89B2     		uxthmi	r1, r1
 1066              	.LVL136:
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1067              		.loc 1 329 21 is_stmt 1 view .LVU326
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1068              		.loc 1 330 21 view .LVU327
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1069              		.loc 1 330 62 is_stmt 0 view .LVU328
 1070 03ba 204A     		ldr	r2, .L219+20
 1071 03bc 14F0080F 		tst	r4, #8
 1072 03c0 E3E7     		b	.L218
 1073              	.LVL137:
 1074              	.L37:
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1075              		.loc 1 334 21 is_stmt 1 view .LVU329
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1076              		.loc 1 336 61 is_stmt 0 view .LVU330
 1077 03c2 1948     		ldr	r0, .L219
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1078              		.loc 1 335 32 view .LVU331
 1079 03c4 1C4A     		ldr	r2, .L219+16
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1080              		.loc 1 334 39 view .LVU332
 1081 03c6 4646     		mov	r6, r8
 1082              	.LVL138:
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1083              		.loc 1 336 61 view .LVU333
 1084 03c8 14F0080F 		tst	r4, #8
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1085              		.loc 1 334 23 view .LVU334
 1086 03cc 56F8041B 		ldr	r1, [r6], #4
 1087              	.LVL139:
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1088              		.loc 1 335 21 is_stmt 1 view .LVU335
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1089              		.loc 1 335 32 is_stmt 0 view .LVU336
 1090 03d0 EA62     		str	r2, [r5, #44]
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1091              		.loc 1 336 21 is_stmt 1 view .LVU337
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1092              		.loc 1 336 61 is_stmt 0 view .LVU338
 1093 03d2 1B4A     		ldr	r2, .L219+24
 1094 03d4 08BF     		it	eq
 1095 03d6 0246     		moveq	r2, r0
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1096              		.loc 1 336 36 view .LVU339
 1097 03d8 6A60     		str	r2, [r5, #4]
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1098              		.loc 1 337 21 is_stmt 1 view .LVU340
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1099              		.loc 1 337 39 is_stmt 0 view .LVU341
 1100 03da 0822     		movs	r2, #8
 1101 03dc AA60     		str	r2, [r5, #8]
 338:source\lcd/print.c ****                     break;
 1102              		.loc 1 338 21 is_stmt 1 view .LVU342
 338:source\lcd/print.c ****                     break;
 1103              		.loc 1 338 27 is_stmt 0 view .LVU343
 1104 03de 44F01004 		orr	r4, r4, #16
 1105              	.LVL140:
 339:source\lcd/print.c ****                   case 'o':
 1106              		.loc 1 339 21 is_stmt 1 view .LVU344
 1107              	.L67:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1108              		.loc 1 386 16 view .LVU345
 1109              	.LBB58:
 1110              	.LBB59:
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1111              		.loc 1 113 26 is_stmt 0 view .LVU346
 1112 03e2 4FF0FF32 		mov	r2, #-1
 114:source\lcd/print.c ****       switch (ch) {
 1113              		.loc 1 114 10 view .LVU347
 1114 03e6 14F4047F 		tst	r4, #528
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1115              		.loc 1 113 50 view .LVU348
 1116 03ea C5E90322 		strd	r2, r2, [r5, #12]
 114:source\lcd/print.c ****       switch (ch) {
 1117              		.loc 1 114 72 view .LVU349
 1118 03ee 04BF     		itt	eq
 1119 03f0 0122     		moveq	r2, #1
 1120 03f2 AA60     		streq	r2, [r5, #8]
 115:source\lcd/print.c **** 	 case 'p':
 1121              		.loc 1 115 7 view .LVU350
 1122 03f4 6E2B     		cmp	r3, #110
 1123              	.LBE59:
 1124              	.LBE58:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1125              		.loc 1 386 26 view .LVU351
 1126 03f6 2F63     		str	r7, [r5, #48]
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1127              		.loc 1 387 16 is_stmt 1 view .LVU352
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1128              		.loc 1 387 30 is_stmt 0 view .LVU353
 1129 03f8 2C60     		str	r4, [r5]
 388:source\lcd/print.c ****                continue;
 1130              		.loc 1 388 16 is_stmt 1 view .LVU354
 1131              	.LVL141:
 1132              	.LBB83:
 1133              	.LBI58:
 108:source\lcd/print.c **** {
 1134              		.loc 1 108 12 view .LVU355
 1135              	.LBB80:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1136              		.loc 1 110 7 view .LVU356
 111:source\lcd/print.c ****       int flags = dr->fpr.flags;
 1137              		.loc 1 111 7 view .LVU357
 112:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 1138              		.loc 1 112 7 view .LVU358
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1139              		.loc 1 113 7 view .LVU359
 114:source\lcd/print.c ****       switch (ch) {
 1140              		.loc 1 114 7 view .LVU360
 114:source\lcd/print.c ****       switch (ch) {
 1141              		.loc 1 114 54 view .LVU361
 115:source\lcd/print.c **** 	 case 'p':
 1142              		.loc 1 115 7 view .LVU362
 1143 03fa 00F38280 		bgt	.L88
 115:source\lcd/print.c **** 	 case 'p':
 1144              		.loc 1 115 7 is_stmt 0 view .LVU363
 1145 03fe 642B     		cmp	r3, #100
 1146 0400 00F03881 		beq	.L89
 1147 0404 692B     		cmp	r3, #105
 1148 0406 00F03581 		beq	.L89
 1149 040a 582B     		cmp	r3, #88
 1150 040c 00F09480 		beq	.L90
 1151              	.LVL142:
 1152              	.L91:
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1153              		.loc 1 164 5 is_stmt 1 view .LVU364
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1154              		.loc 1 164 13 is_stmt 0 view .LVU365
 1155 0410 3023     		movs	r3, #48
 165:source\lcd/print.c ****            buff[2] = '0';
 1156              		.loc 1 165 20 view .LVU366
 1157 0412 2E22     		movs	r2, #46
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1158              		.loc 1 164 13 view .LVU367
 1159 0414 8DF82030 		strb	r3, [sp, #32]
 165:source\lcd/print.c ****            buff[2] = '0';
 1160              		.loc 1 165 12 is_stmt 1 view .LVU368
 165:source\lcd/print.c ****            buff[2] = '0';
 1161              		.loc 1 165 20 is_stmt 0 view .LVU369
 1162 0418 8DF82120 		strb	r2, [sp, #33]
 166:source\lcd/print.c ****            len = 3;
 1163              		.loc 1 166 12 is_stmt 1 view .LVU370
 166:source\lcd/print.c ****            len = 3;
 1164              		.loc 1 166 20 is_stmt 0 view .LVU371
 1165 041c 8DF82230 		strb	r3, [sp, #34]
 167:source\lcd/print.c ****            break;
 1166              		.loc 1 167 12 is_stmt 1 view .LVU372
 1167              	.LVL143:
 168:source\lcd/print.c ****       }
 1168              		.loc 1 168 12 view .LVU373
 167:source\lcd/print.c ****            break;
 1169              		.loc 1 167 16 is_stmt 0 view .LVU374
 1170 0420 4FF00308 		mov	r8, #3
 168:source\lcd/print.c ****       }
 1171              		.loc 1 168 12 view .LVU375
 1172 0424 9FE0     		b	.L98
 1173              	.L220:
 1174 0426 00BF     		.align	2
 1175              	.L219:
 1176 0428 03000000 		.word	.LC1
 1177 042c 0D000000 		.word	.LC6
 1178 0430 11000000 		.word	.LC8
 1179 0434 00000000 		.word	.LC0
 1180 0438 22000000 		.word	.LC9
 1181 043c 04000000 		.word	.LC2
 1182 0440 07000000 		.word	.LC3
 1183              	.LVL144:
 1184              	.L38:
 168:source\lcd/print.c ****       }
 1185              		.loc 1 168 12 view .LVU376
 1186              	.LBE80:
 1187              	.LBE83:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1188              		.loc 1 341 21 is_stmt 1 view .LVU377
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1189              		.loc 1 341 24 is_stmt 0 view .LVU378
 1190 0444 6606     		lsls	r6, r4, #25
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1191              		.loc 1 341 42 is_stmt 1 view .LVU379
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1192              		.loc 1 341 54 is_stmt 0 view .LVU380
 1193 0446 43BF     		ittte	mi
 1194 0448 08F10706 		addmi	r6, r8, #7
 1195 044c 26F00706 		bicmi	r6, r6, #7
 1196              	.LVL145:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1197              		.loc 1 341 52 view .LVU381
 1198 0450 F6E80201 		ldrdmi	r0, [r6], #8
 1199              	.LVL146:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1200              		.loc 1 341 87 view .LVU382
 1201 0454 4646     		movpl	r6, r8
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1202              		.loc 1 341 52 view .LVU383
 1203 0456 4CBF     		ite	mi
 1204 0458 C5E90E01 		strdmi	r0, [r5, #56]
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1205              		.loc 1 341 85 view .LVU384
 1206 045c 56F8041B 		ldrpl	r1, [r6], #4
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1207              		.loc 1 343 61 view .LVU385
 1208 0460 AE4A     		ldr	r2, .L221
 225:source\lcd/print.c ****                for (;;) {
 1209              		.loc 1 225 29 view .LVU386
 1210 0462 48BF     		it	mi
 1211 0464 0021     		movmi	r1, #0
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1212              		.loc 1 341 83 is_stmt 1 view .LVU387
 1213              	.LVL147:
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1214              		.loc 1 342 21 view .LVU388
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1215              		.loc 1 342 24 is_stmt 0 view .LVU389
 1216 0466 2006     		lsls	r0, r4, #24
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1217              		.loc 1 342 45 is_stmt 1 view .LVU390
 1218 0468 48BF     		it	mi
 1219 046a 89B2     		uxthmi	r1, r1
 1220              	.LVL148:
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1221              		.loc 1 343 21 view .LVU391
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1222              		.loc 1 343 61 is_stmt 0 view .LVU392
 1223 046c 14F0080F 		tst	r4, #8
 1224 0470 8BE7     		b	.L218
 1225              	.LVL149:
 1226              	.L35:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1227              		.loc 1 347 21 is_stmt 1 view .LVU393
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1228              		.loc 1 347 24 is_stmt 0 view .LVU394
 1229 0472 6106     		lsls	r1, r4, #25
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1230              		.loc 1 347 42 is_stmt 1 view .LVU395
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1231              		.loc 1 347 54 is_stmt 0 view .LVU396
 1232 0474 43BF     		ittte	mi
 1233 0476 08F10706 		addmi	r6, r8, #7
 1234 047a 26F00706 		bicmi	r6, r6, #7
 1235              	.LVL150:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1236              		.loc 1 347 52 view .LVU397
 1237 047e F6E80201 		ldrdmi	r0, [r6], #8
 1238              	.LVL151:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1239              		.loc 1 347 85 view .LVU398
 1240 0482 4646     		movpl	r6, r8
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1241              		.loc 1 347 52 view .LVU399
 1242 0484 4ABF     		itet	mi
 1243 0486 C5E90E01 		strdmi	r0, [r5, #56]
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1244              		.loc 1 347 85 view .LVU400
 1245 048a 56F8041B 		ldrpl	r1, [r6], #4
 225:source\lcd/print.c ****                for (;;) {
 1246              		.loc 1 225 29 view .LVU401
 1247 048e 0021     		movmi	r1, #0
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1248              		.loc 1 347 83 is_stmt 1 view .LVU402
 1249              	.LVL152:
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1250              		.loc 1 348 21 view .LVU403
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1251              		.loc 1 348 24 is_stmt 0 view .LVU404
 1252 0490 2206     		lsls	r2, r4, #24
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1253              		.loc 1 348 45 is_stmt 1 view .LVU405
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1254              		.loc 1 349 36 is_stmt 0 view .LVU406
 1255 0492 A34A     		ldr	r2, .L221+4
 1256 0494 48BF     		it	mi
 1257 0496 89B2     		uxthmi	r1, r1
 1258              	.LVL153:
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1259              		.loc 1 349 21 is_stmt 1 view .LVU407
 1260              	.L83:
 1261              	.LBB84:
 367:source\lcd/print.c ****                   }
 1262              		.loc 1 367 36 is_stmt 0 discriminator 12 view .LVU408
 1263 0498 6A60     		str	r2, [r5, #4]
 1264              	.LBE84:
 369:source\lcd/print.c ****                     break;
 1265              		.loc 1 369 21 is_stmt 1 discriminator 12 view .LVU409
 369:source\lcd/print.c ****                     break;
 1266              		.loc 1 369 24 is_stmt 0 discriminator 12 view .LVU410
 1267 049a E206     		lsls	r2, r4, #27
 1268 049c A1D5     		bpl	.L67
 369:source\lcd/print.c ****                     break;
 1269              		.loc 1 369 45 is_stmt 1 discriminator 1 view .LVU411
 369:source\lcd/print.c ****                     break;
 1270              		.loc 1 369 51 is_stmt 0 discriminator 1 view .LVU412
 1271 049e 24F48074 		bic	r4, r4, #256
 1272              	.LVL154:
 369:source\lcd/print.c ****                     break;
 1273              		.loc 1 369 51 discriminator 1 view .LVU413
 1274 04a2 9EE7     		b	.L67
 1275              	.LVL155:
 1276              	.L40:
 1277              	.LBB85:
 355:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 1278              		.loc 1 355 21 is_stmt 1 view .LVU414
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1279              		.loc 1 356 21 view .LVU415
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1280              		.loc 1 356 24 is_stmt 0 view .LVU416
 1281 04a4 6006     		lsls	r0, r4, #25
 1282 04a6 1BD5     		bpl	.L80
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1283              		.loc 1 357 24 is_stmt 1 view .LVU417
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1284              		.loc 1 357 36 is_stmt 0 view .LVU418
 1285 04a8 08F10708 		add	r8, r8, #7
 1286              	.LVL156:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1287              		.loc 1 357 36 view .LVU419
 1288 04ac 28F00708 		bic	r8, r8, #7
 1289              	.LVL157:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1290              		.loc 1 357 36 view .LVU420
 1291 04b0 4646     		mov	r6, r8
 1292              	.LVL158:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1293              		.loc 1 357 36 view .LVU421
 1294 04b2 D8F80420 		ldr	r2, [r8, #4]
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1295              		.loc 1 358 24 is_stmt 1 view .LVU422
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1296              		.loc 1 357 36 is_stmt 0 view .LVU423
 1297 04b6 56F8081B 		ldr	r1, [r6], #8
 1298              	.LVL159:
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1299              		.loc 1 358 27 view .LVU424
 1300 04ba 002A     		cmp	r2, #0
 1301 04bc 08DB     		blt	.L81
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1302              		.loc 1 357 34 view .LVU425
 1303 04be C5E90E12 		strd	r1, r2, [r5, #56]
 1304              	.LBE85:
 225:source\lcd/print.c ****                for (;;) {
 1305              		.loc 1 225 29 view .LVU426
 1306 04c2 0021     		movs	r1, #0
 1307              	.L82:
 1308              	.LBB86:
 367:source\lcd/print.c ****                   }
 1309              		.loc 1 367 78 discriminator 1 view .LVU427
 1310 04c4 A007     		lsls	r0, r4, #30
 1311 04c6 18D4     		bmi	.L150
 367:source\lcd/print.c ****                   }
 1312              		.loc 1 367 105 discriminator 3 view .LVU428
 1313 04c8 964A     		ldr	r2, .L221+8
 1314 04ca 14F0040F 		tst	r4, #4
 1315 04ce 5CE7     		b	.L218
 1316              	.L81:
 359:source\lcd/print.c ****                           w = -1;
 1317              		.loc 1 359 27 is_stmt 1 view .LVU429
 359:source\lcd/print.c ****                           w = -1;
 1318              		.loc 1 359 39 is_stmt 0 view .LVU430
 1319 04d0 4942     		negs	r1, r1
 1320 04d2 62EB4202 		sbc	r2, r2, r2, lsl #1
 359:source\lcd/print.c ****                           w = -1;
 1321              		.loc 1 359 37 view .LVU431
 1322 04d6 C5E90E12 		strd	r1, r2, [r5, #56]
 360:source\lcd/print.c ****                        } else w = 0;
 1323              		.loc 1 360 27 is_stmt 1 view .LVU432
 1324              	.LVL160:
 367:source\lcd/print.c ****                   }
 1325              		.loc 1 367 21 view .LVU433
 1326              	.LBE86:
 225:source\lcd/print.c ****                for (;;) {
 1327              		.loc 1 225 29 is_stmt 0 view .LVU434
 1328 04da 0021     		movs	r1, #0
 1329              	.LVL161:
 1330              	.L149:
 1331              	.LBB87:
 367:source\lcd/print.c ****                   }
 1332              		.loc 1 367 52 view .LVU435
 1333 04dc 924A     		ldr	r2, .L221+12
 1334 04de DBE7     		b	.L83
 1335              	.LVL162:
 1336              	.L80:
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1337              		.loc 1 363 24 is_stmt 1 view .LVU436
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1338              		.loc 1 363 26 is_stmt 0 view .LVU437
 1339 04e0 4646     		mov	r6, r8
 1340              	.LVL163:
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1341              		.loc 1 364 27 view .LVU438
 1342 04e2 2106     		lsls	r1, r4, #24
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1343              		.loc 1 363 26 view .LVU439
 1344 04e4 56F8042B 		ldr	r2, [r6], #4
 1345              	.LVL164:
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1346              		.loc 1 364 24 is_stmt 1 view .LVU440
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1347              		.loc 1 364 48 view .LVU441
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1348              		.loc 1 364 52 is_stmt 0 view .LVU442
 1349 04e8 48BF     		it	mi
 1350 04ea 12B2     		sxthmi	r2, r2
 1351              	.LVL165:
 365:source\lcd/print.c ****                     }
 1352              		.loc 1 365 24 is_stmt 1 view .LVU443
 365:source\lcd/print.c ****                     }
 1353              		.loc 1 365 41 is_stmt 0 view .LVU444
 1354 04ec 82EAE271 		eor	r1, r2, r2, asr #31
 367:source\lcd/print.c ****                   }
 1355              		.loc 1 367 52 view .LVU445
 1356 04f0 002A     		cmp	r2, #0
 365:source\lcd/print.c ****                     }
 1357              		.loc 1 365 41 view .LVU446
 1358 04f2 A1EBE271 		sub	r1, r1, r2, asr #31
 1359              	.LVL166:
 367:source\lcd/print.c ****                   }
 1360              		.loc 1 367 21 is_stmt 1 view .LVU447
 367:source\lcd/print.c ****                   }
 1361              		.loc 1 367 52 is_stmt 0 view .LVU448
 1362 04f6 E5DA     		bge	.L82
 1363 04f8 F0E7     		b	.L149
 1364              	.LVL167:
 1365              	.L150:
 367:source\lcd/print.c ****                   }
 1366              		.loc 1 367 78 view .LVU449
 1367 04fa 8C4A     		ldr	r2, .L221+16
 1368 04fc CCE7     		b	.L83
 1369              	.LVL168:
 1370              	.L152:
 367:source\lcd/print.c ****                   }
 1371              		.loc 1 367 78 view .LVU450
 1372              	.LBE87:
 382:source\lcd/print.c ****                     }
 1373              		.loc 1 382 60 view .LVU451
 1374 04fe 8B4A     		ldr	r2, .L221+16
 1375 0500 2BE6     		b	.L86
 1376              	.LVL169:
 1377              	.L88:
 1378              	.LBB88:
 1379              	.LBB81:
 115:source\lcd/print.c **** 	 case 'p':
 1380              		.loc 1 115 7 view .LVU452
 1381 0502 6F3B     		subs	r3, r3, #111
 1382              	.LVL170:
 115:source\lcd/print.c **** 	 case 'p':
 1383              		.loc 1 115 7 view .LVU453
 1384 0504 092B     		cmp	r3, #9
 1385 0506 83D8     		bhi	.L91
 1386 0508 01A2     		adr	r2, .L92
 1387 050a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1388 050e 00BF     		.p2align 2
 1389              	.L92:
 1390 0510 21060000 		.word	.L93+1
 1391 0514 39050000 		.word	.L90+1
 1392 0518 11040000 		.word	.L91+1
 1393 051c 11040000 		.word	.L91+1
 1394 0520 11040000 		.word	.L91+1
 1395 0524 11040000 		.word	.L91+1
 1396 0528 75060000 		.word	.L89+1
 1397 052c 11040000 		.word	.L91+1
 1398 0530 11040000 		.word	.L91+1
 1399 0534 39050000 		.word	.L90+1
 1400              	.LVL171:
 1401              		.p2align 1
 1402              	.L90:
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1403              		.loc 1 119 5 is_stmt 1 view .LVU454
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1404              		.loc 1 119 8 is_stmt 0 view .LVU455
 1405 0538 14F04008 		ands	r8, r4, #64
 1406 053c 0BD1     		bne	.L94
 1407 053e 08AB     		add	r3, sp, #32
 1408              	.LVL172:
 1409              	.L95:
 126:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 1410              		.loc 1 126 14 is_stmt 1 view .LVU456
 1411 0540 89B1     		cbz	r1, .L98
 127:source\lcd/print.c **** 		    v = v >> 4;
 1412              		.loc 1 127 7 view .LVU457
 127:source\lcd/print.c **** 		    v = v >> 4;
 1413              		.loc 1 127 34 is_stmt 0 view .LVU458
 1414 0542 01F00F02 		and	r2, r1, #15
 127:source\lcd/print.c **** 		    v = v >> 4;
 1415              		.loc 1 127 31 view .LVU459
 1416 0546 E86A     		ldr	r0, [r5, #44]
 127:source\lcd/print.c **** 		    v = v >> 4;
 1417              		.loc 1 127 19 view .LVU460
 1418 0548 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 1419 054a 03F8012B 		strb	r2, [r3], #1
 127:source\lcd/print.c **** 		    v = v >> 4;
 1420              		.loc 1 127 15 view .LVU461
 1421 054e 08F10108 		add	r8, r8, #1
 1422              	.LVL173:
 128:source\lcd/print.c **** 	      }
 1423              		.loc 1 128 7 is_stmt 1 view .LVU462
 128:source\lcd/print.c **** 	      }
 1424              		.loc 1 128 9 is_stmt 0 view .LVU463
 1425 0552 0909     		lsrs	r1, r1, #4
 1426              	.LVL174:
 128:source\lcd/print.c **** 	      }
 1427              		.loc 1 128 9 view .LVU464
 1428 0554 F4E7     		b	.L95
 1429              	.LVL175:
 1430              	.L94:
 1431              	.LBB60:
 120:source\lcd/print.c **** 	      while (w != 0) {
 1432              		.loc 1 120 8 is_stmt 1 view .LVU465
 120:source\lcd/print.c **** 	      while (w != 0) {
 1433              		.loc 1 120 27 is_stmt 0 view .LVU466
 1434 0556 D5E90E31 		ldrd	r3, r1, [r5, #56]
 1435              	.LVL176:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1436              		.loc 1 121 8 is_stmt 1 view .LVU467
 1437 055a 08AA     		add	r2, sp, #32
 1438              	.LBE60:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1439              		.loc 1 110 11 is_stmt 0 view .LVU468
 1440 055c 4FF00008 		mov	r8, #0
 1441              	.LVL177:
 1442              	.L96:
 1443              	.LBB61:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1444              		.loc 1 121 14 is_stmt 1 view .LVU469
 1445 0560 53EA0100 		orrs	r0, r3, r1
 1446 0564 4ED1     		bne	.L97
 1447              	.LVL178:
 1448              	.L98:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1449              		.loc 1 121 14 is_stmt 0 view .LVU470
 1450              	.LBE61:
 1451              	.LBB62:
 171:source\lcd/print.c ****       int width = dr->width;
 1452              		.loc 1 171 7 is_stmt 1 view .LVU471
 172:source\lcd/print.c ****       if (flags & _FPCONV) {
 1453              		.loc 1 172 7 view .LVU472
 173:source\lcd/print.c **** 	 precision = 0;
 1454              		.loc 1 173 7 view .LVU473
 173:source\lcd/print.c **** 	 precision = 0;
 1455              		.loc 1 173 10 is_stmt 0 view .LVU474
 1456 0566 14F40073 		ands	r3, r4, #512
 1457 056a 0593     		str	r3, [sp, #20]
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1458              		.loc 1 178 10 is_stmt 1 view .LVU475
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1459              		.loc 1 178 20 is_stmt 0 view .LVU476
 1460 056c 08BF     		it	eq
 1461 056e AB68     		ldreq	r3, [r5, #8]
 1462              	.LVL179:
 179:source\lcd/print.c ****       }
 1463              		.loc 1 179 10 is_stmt 1 view .LVU477
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1464              		.loc 1 181 35 is_stmt 0 view .LVU478
 1465 0570 6868     		ldr	r0, [r5, #4]
 179:source\lcd/print.c ****       }
 1466              		.loc 1 179 25 view .LVU479
 1467 0572 06BF     		itte	eq
 1468 0574 A3EB0803 		subeq	r3, r3, r8
 1469              	.LVL180:
 179:source\lcd/print.c ****       }
 1470              		.loc 1 179 25 view .LVU480
 1471 0578 23EAE373 		biceq	r3, r3, r3, asr #31
 1472 057c 0023     		movne	r3, #0
 1473 057e 0293     		str	r3, [sp, #8]
 1474              	.LVL181:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1475              		.loc 1 181 7 is_stmt 1 view .LVU481
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1476              		.loc 1 181 35 is_stmt 0 view .LVU482
 1477 0580 FFF7FEFF 		bl	strlen
 1478              	.LVL182:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1479              		.loc 1 181 27 view .LVU483
 1480 0584 029B     		ldr	r3, [sp, #8]
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1481              		.loc 1 181 13 view .LVU484
 1482 0586 381A     		subs	r0, r7, r0
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1483              		.loc 1 181 27 view .LVU485
 1484 0588 08EB0307 		add	r7, r8, r3
 1485              	.LVL183:
 182:source\lcd/print.c ****       {
 1486              		.loc 1 182 32 view .LVU486
 1487 058c 04F00103 		and	r3, r4, #1
 1488 0590 0493     		str	r3, [sp, #16]
 1489 0592 40F20113 		movw	r3, #257
 1490 0596 1C42     		tst	r4, r3
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1491              		.loc 1 181 13 view .LVU487
 1492 0598 A0EB0707 		sub	r7, r0, r7
 1493              	.LVL184:
 182:source\lcd/print.c ****       {
 1494              		.loc 1 182 7 is_stmt 1 view .LVU488
 182:source\lcd/print.c ****       {
 1495              		.loc 1 182 32 view .LVU489
 1496 059c 00F0AC80 		beq	.L155
 1497              	.LBE62:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1498              		.loc 1 110 20 is_stmt 0 view .LVU490
 1499 05a0 0022     		movs	r2, #0
 1500              	.LVL185:
 1501              	.L113:
 1502              	.LBB71:
 1503              	.LBB63:
 182:source\lcd/print.c ****       {
 1504              		.loc 1 182 32 is_stmt 1 view .LVU491
 1505              	.LBE63:
 182:source\lcd/print.c ****       {
 1506              		.loc 1 182 50 view .LVU492
 1507              	.LBB64:
 184:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 1508              		.loc 1 184 7 view .LVU493
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1509              		.loc 1 185 7 view .LVU494
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1510              		.loc 1 185 13 is_stmt 0 view .LVU495
 1511 05a2 6B68     		ldr	r3, [r5, #4]
 1512              	.LVL186:
 186:source\lcd/print.c ****       }
 1513              		.loc 1 186 7 is_stmt 1 view .LVU496
 186:source\lcd/print.c ****       }
 1514              		.loc 1 186 7 is_stmt 0 view .LVU497
 1515 05a4 D21A     		subs	r2, r2, r3
 1516              	.LVL187:
 1517              	.L115:
 186:source\lcd/print.c ****       }
 1518              		.loc 1 186 7 view .LVU498
 1519 05a6 03EB020A 		add	r10, r3, r2
 1520              	.LVL188:
 186:source\lcd/print.c ****       }
 1521              		.loc 1 186 14 is_stmt 1 view .LVU499
 186:source\lcd/print.c ****       }
 1522              		.loc 1 186 16 is_stmt 0 view .LVU500
 1523 05aa 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 1524              	.LVL189:
 186:source\lcd/print.c ****       }
 1525              		.loc 1 186 16 view .LVU501
 1526 05ae 0391     		str	r1, [sp, #12]
 1527              	.LVL190:
 186:source\lcd/print.c ****       }
 1528              		.loc 1 186 7 view .LVU502
 1529 05b0 0029     		cmp	r1, #0
 1530 05b2 40F0A380 		bne	.L116
 1531              	.LBE64:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1532              		.loc 1 188 7 is_stmt 1 view .LVU503
 1533 05b6 049B     		ldr	r3, [sp, #16]
 1534              	.LVL191:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1535              		.loc 1 188 7 is_stmt 0 view .LVU504
 1536 05b8 6BB9     		cbnz	r3, .L117
 1537              	.LBB65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1538              		.loc 1 188 7 is_stmt 1 view .LVU505
 1539 05ba 14F4807F 		tst	r4, #256
 1540 05be 14BF     		ite	ne
 1541 05c0 3023     		movne	r3, #48
 1542 05c2 2023     		moveq	r3, #32
 1543              	.LVL192:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1544              		.loc 1 188 7 view .LVU506
 1545 05c4 3C46     		mov	r4, r7
 1546              	.LVL193:
 1547              	.L119:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1548              		.loc 1 188 7 view .LVU507
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1549              		.loc 1 188 7 is_stmt 0 view .LVU508
 1550 05c6 013C     		subs	r4, r4, #1
 1551              	.LVL194:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1552              		.loc 1 188 7 view .LVU509
 1553 05c8 40F1A180 		bpl	.L120
 1554 05cc 27EAE773 		bic	r3, r7, r7, asr #31
 1555 05d0 013F     		subs	r7, r7, #1
 1556 05d2 9A44     		add	r10, r10, r3
 1557 05d4 FF1A     		subs	r7, r7, r3
 1558              	.LVL195:
 1559              	.L117:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1560              		.loc 1 188 7 is_stmt 1 view .LVU510
 1561              	.LBE65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1562              		.loc 1 188 25 view .LVU511
 189:source\lcd/print.c **** 	 int i, c;
 1563              		.loc 1 189 7 view .LVU512
 189:source\lcd/print.c **** 	 int i, c;
 1564              		.loc 1 189 10 is_stmt 0 view .LVU513
 1565 05d6 059B     		ldr	r3, [sp, #20]
 1566 05d8 002B     		cmp	r3, #0
 1567 05da 40F0C480 		bne	.L121
 1568 05de 029C     		ldr	r4, [sp, #8]
 1569              	.LVL196:
 1570              	.L122:
 206:source\lcd/print.c **** 	 charcount += len;
 1571              		.loc 1 206 3 is_stmt 1 view .LVU514
 1572 05e0 013C     		subs	r4, r4, #1
 1573              	.LVL197:
 206:source\lcd/print.c **** 	 charcount += len;
 1574              		.loc 1 206 3 is_stmt 0 view .LVU515
 1575 05e2 80F0D480 		bcs	.L131
 1576 05e6 029B     		ldr	r3, [sp, #8]
 1577 05e8 5344     		add	r3, r3, r10
 1578 05ea 9A46     		mov	r10, r3
 206:source\lcd/print.c **** 	 charcount += len;
 1579              		.loc 1 206 36 is_stmt 1 view .LVU516
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1580              		.loc 1 207 3 view .LVU517
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1581              		.loc 1 207 13 is_stmt 0 view .LVU518
 1582 05ec C244     		add	r10, r10, r8
 1583              	.LVL198:
 208:source\lcd/print.c ****       }
 1584              		.loc 1 208 10 is_stmt 1 view .LVU519
 1585              	.L132:
 208:source\lcd/print.c ****       }
 1586              		.loc 1 208 16 view .LVU520
 1587 05ee B8F10108 		subs	r8, r8, #1
 1588              	.LVL199:
 208:source\lcd/print.c ****       }
 1589              		.loc 1 208 16 is_stmt 0 view .LVU521
 1590 05f2 C0F0BB80 		bcc	.L130
 208:source\lcd/print.c ****       }
 1591              		.loc 1 208 28 is_stmt 1 view .LVU522
 1592 05f6 08AA     		add	r2, sp, #32
 1593 05f8 6B6A     		ldr	r3, [r5, #36]
 1594 05fa 12F80800 		ldrb	r0, [r2, r8]	@ zero_extendqisi2
 1595 05fe 4946     		mov	r1, r9
 1596 0600 9847     		blx	r3
 1597              	.LVL200:
 1598 0602 F4E7     		b	.L132
 1599              	.LVL201:
 1600              	.L97:
 208:source\lcd/print.c ****       }
 1601              		.loc 1 208 28 is_stmt 0 view .LVU523
 1602              	.LBE71:
 1603              	.LBB72:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1604              		.loc 1 122 7 is_stmt 1 view .LVU524
 122:source\lcd/print.c **** 		    w = w >> 4;
 1605              		.loc 1 122 39 is_stmt 0 view .LVU525
 1606 0604 03F00F0C 		and	ip, r3, #15
 122:source\lcd/print.c **** 		    w = w >> 4;
 1607              		.loc 1 122 31 view .LVU526
 1608 0608 E86A     		ldr	r0, [r5, #44]
 123:source\lcd/print.c **** 	      }
 1609              		.loc 1 123 9 view .LVU527
 1610 060a 1B09     		lsrs	r3, r3, #4
 1611              	.LVL202:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1612              		.loc 1 122 19 view .LVU528
 1613 060c 10F80C00 		ldrb	r0, [r0, ip]	@ zero_extendqisi2
 1614 0610 02F8010B 		strb	r0, [r2], #1
 123:source\lcd/print.c **** 	      }
 1615              		.loc 1 123 9 view .LVU529
 1616 0614 43EA0173 		orr	r3, r3, r1, lsl #28
 122:source\lcd/print.c **** 		    w = w >> 4;
 1617              		.loc 1 122 15 view .LVU530
 1618 0618 08F10108 		add	r8, r8, #1
 1619              	.LVL203:
 123:source\lcd/print.c **** 	      }
 1620              		.loc 1 123 7 is_stmt 1 view .LVU531
 123:source\lcd/print.c **** 	      }
 1621              		.loc 1 123 9 is_stmt 0 view .LVU532
 1622 061c 0909     		lsrs	r1, r1, #4
 123:source\lcd/print.c **** 	      }
 1623              		.loc 1 123 9 view .LVU533
 1624 061e 9FE7     		b	.L96
 1625              	.LVL204:
 1626              	.L93:
 123:source\lcd/print.c **** 	      }
 1627              		.loc 1 123 9 view .LVU534
 1628              	.LBE72:
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1629              		.loc 1 133 5 is_stmt 1 view .LVU535
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1630              		.loc 1 133 8 is_stmt 0 view .LVU536
 1631 0620 14F04008 		ands	r8, r4, #64
 1632 0624 0AD1     		bne	.L100
 1633 0626 08AB     		add	r3, sp, #32
 1634              	.LVL205:
 1635              	.L101:
 140:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 1636              		.loc 1 140 14 is_stmt 1 view .LVU537
 1637 0628 81B1     		cbz	r1, .L104
 141:source\lcd/print.c **** 		    v = v >> 3;
 1638              		.loc 1 141 7 view .LVU538
 141:source\lcd/print.c **** 		    v = v >> 3;
 1639              		.loc 1 141 30 is_stmt 0 view .LVU539
 1640 062a 01F00702 		and	r2, r1, #7
 141:source\lcd/print.c **** 		    v = v >> 3;
 1641              		.loc 1 141 25 view .LVU540
 1642 062e 3032     		adds	r2, r2, #48
 141:source\lcd/print.c **** 		    v = v >> 3;
 1643              		.loc 1 141 19 view .LVU541
 1644 0630 03F8012B 		strb	r2, [r3], #1
 141:source\lcd/print.c **** 		    v = v >> 3;
 1645              		.loc 1 141 15 view .LVU542
 1646 0634 08F10108 		add	r8, r8, #1
 1647              	.LVL206:
 142:source\lcd/print.c **** 	      }
 1648              		.loc 1 142 7 is_stmt 1 view .LVU543
 142:source\lcd/print.c **** 	      }
 1649              		.loc 1 142 9 is_stmt 0 view .LVU544
 1650 0638 C908     		lsrs	r1, r1, #3
 1651              	.LVL207:
 142:source\lcd/print.c **** 	      }
 1652              		.loc 1 142 9 view .LVU545
 1653 063a F5E7     		b	.L101
 1654              	.LVL208:
 1655              	.L100:
 1656              	.LBB73:
 134:source\lcd/print.c **** 	      while (w != 0) {
 1657              		.loc 1 134 8 is_stmt 1 view .LVU546
 134:source\lcd/print.c **** 	      while (w != 0) {
 1658              		.loc 1 134 27 is_stmt 0 view .LVU547
 1659 063c D5E90E31 		ldrd	r3, r1, [r5, #56]
 1660              	.LVL209:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1661              		.loc 1 135 8 is_stmt 1 view .LVU548
 1662 0640 08AA     		add	r2, sp, #32
 1663              	.LBE73:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1664              		.loc 1 110 11 is_stmt 0 view .LVU549
 1665 0642 4FF00008 		mov	r8, #0
 1666              	.LVL210:
 1667              	.L102:
 1668              	.LBB74:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1669              		.loc 1 135 14 is_stmt 1 view .LVU550
 1670 0646 53EA0100 		orrs	r0, r3, r1
 1671 064a 05D1     		bne	.L103
 1672              	.LVL211:
 1673              	.L104:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1674              		.loc 1 135 14 is_stmt 0 view .LVU551
 1675              	.LBE74:
 145:source\lcd/print.c **** 	   break;
 1676              		.loc 1 145 5 is_stmt 1 view .LVU552
 145:source\lcd/print.c **** 	   break;
 1677              		.loc 1 145 8 is_stmt 0 view .LVU553
 1678 064c 2307     		lsls	r3, r4, #28
 1679 064e 8AD5     		bpl	.L98
 145:source\lcd/print.c **** 	   break;
 1680              		.loc 1 145 27 is_stmt 1 view .LVU554
 145:source\lcd/print.c **** 	   break;
 1681              		.loc 1 145 44 is_stmt 0 view .LVU555
 1682 0650 AB68     		ldr	r3, [r5, #8]
 1683 0652 013B     		subs	r3, r3, #1
 1684 0654 AB60     		str	r3, [r5, #8]
 1685 0656 86E7     		b	.L98
 1686              	.LVL212:
 1687              	.L103:
 1688              	.LBB75:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1689              		.loc 1 136 7 is_stmt 1 view .LVU556
 136:source\lcd/print.c **** 		    w = w >> 3;
 1690              		.loc 1 136 39 is_stmt 0 view .LVU557
 1691 0658 03F0070C 		and	ip, r3, #7
 136:source\lcd/print.c **** 		    w = w >> 3;
 1692              		.loc 1 136 31 view .LVU558
 1693 065c E86A     		ldr	r0, [r5, #44]
 137:source\lcd/print.c **** 	      }
 1694              		.loc 1 137 9 view .LVU559
 1695 065e DB08     		lsrs	r3, r3, #3
 1696              	.LVL213:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1697              		.loc 1 136 19 view .LVU560
 1698 0660 10F80C00 		ldrb	r0, [r0, ip]	@ zero_extendqisi2
 1699 0664 02F8010B 		strb	r0, [r2], #1
 137:source\lcd/print.c **** 	      }
 1700              		.loc 1 137 9 view .LVU561
 1701 0668 43EA4173 		orr	r3, r3, r1, lsl #29
 136:source\lcd/print.c **** 		    w = w >> 3;
 1702              		.loc 1 136 15 view .LVU562
 1703 066c 08F10108 		add	r8, r8, #1
 1704              	.LVL214:
 137:source\lcd/print.c **** 	      }
 1705              		.loc 1 137 7 is_stmt 1 view .LVU563
 137:source\lcd/print.c **** 	      }
 1706              		.loc 1 137 9 is_stmt 0 view .LVU564
 1707 0670 C908     		lsrs	r1, r1, #3
 137:source\lcd/print.c **** 	      }
 1708              		.loc 1 137 9 view .LVU565
 1709 0672 E8E7     		b	.L102
 1710              	.LVL215:
 1711              	.L89:
 137:source\lcd/print.c **** 	      }
 1712              		.loc 1 137 9 view .LVU566
 1713              	.LBE75:
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1714              		.loc 1 150 5 is_stmt 1 view .LVU567
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1715              		.loc 1 150 8 is_stmt 0 view .LVU568
 1716 0674 14F04008 		ands	r8, r4, #64
 1717 0678 0FD1     		bne	.L106
 1718 067a 08AB     		add	r3, sp, #32
 158:source\lcd/print.c **** 		    v = v / 10;
 1719              		.loc 1 158 36 view .LVU569
 1720 067c 0A22     		movs	r2, #10
 1721              	.LVL216:
 1722              	.L107:
 157:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 1723              		.loc 1 157 21 is_stmt 1 view .LVU570
 1724 067e 0029     		cmp	r1, #0
 1725 0680 3FF471AF 		beq	.L98
 158:source\lcd/print.c **** 		    v = v / 10;
 1726              		.loc 1 158 7 view .LVU571
 158:source\lcd/print.c **** 		    v = v / 10;
 1727              		.loc 1 158 36 is_stmt 0 view .LVU572
 1728 0684 B1FBF2F0 		udiv	r0, r1, r2
 1729 0688 02FB1011 		mls	r1, r2, r0, r1
 1730              	.LVL217:
 158:source\lcd/print.c **** 		    v = v / 10;
 1731              		.loc 1 158 25 view .LVU573
 1732 068c 3031     		adds	r1, r1, #48
 158:source\lcd/print.c **** 		    v = v / 10;
 1733              		.loc 1 158 19 view .LVU574
 1734 068e 03F8011B 		strb	r1, [r3], #1
 158:source\lcd/print.c **** 		    v = v / 10;
 1735              		.loc 1 158 15 view .LVU575
 1736 0692 08F10108 		add	r8, r8, #1
 1737              	.LVL218:
 159:source\lcd/print.c **** 	      }
 1738              		.loc 1 159 7 is_stmt 1 view .LVU576
 159:source\lcd/print.c **** 	      }
 1739              		.loc 1 159 9 is_stmt 0 view .LVU577
 1740 0696 0146     		mov	r1, r0
 1741              	.LVL219:
 159:source\lcd/print.c **** 	      }
 1742              		.loc 1 159 9 view .LVU578
 1743 0698 F1E7     		b	.L107
 1744              	.LVL220:
 1745              	.L106:
 1746              	.LBB76:
 151:source\lcd/print.c **** 	      while (w != 0) {
 1747              		.loc 1 151 8 is_stmt 1 view .LVU579
 151:source\lcd/print.c **** 	      while (w != 0) {
 1748              		.loc 1 151 27 is_stmt 0 view .LVU580
 1749 069a AB6B     		ldr	r3, [r5, #56]
 1750 069c 0293     		str	r3, [sp, #8]
 1751 069e D5F83CA0 		ldr	r10, [r5, #60]
 1752              	.LVL221:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1753              		.loc 1 152 8 is_stmt 1 view .LVU581
 1754 06a2 08AB     		add	r3, sp, #32
 1755              	.LVL222:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1756              		.loc 1 152 8 is_stmt 0 view .LVU582
 1757 06a4 0393     		str	r3, [sp, #12]
 1758              	.LBE76:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1759              		.loc 1 110 11 view .LVU583
 1760 06a6 4FF00008 		mov	r8, #0
 1761              	.LVL223:
 1762              	.L108:
 1763              	.LBB77:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1764              		.loc 1 152 14 is_stmt 1 view .LVU584
 1765 06aa 029B     		ldr	r3, [sp, #8]
 1766 06ac 53EA0A03 		orrs	r3, r3, r10
 1767 06b0 3FF459AF 		beq	.L98
 153:source\lcd/print.c ****                     w = w / 10;
 1768              		.loc 1 153 7 view .LVU585
 153:source\lcd/print.c ****                     w = w / 10;
 1769              		.loc 1 153 36 is_stmt 0 view .LVU586
 1770 06b4 0298     		ldr	r0, [sp, #8]
 1771 06b6 5146     		mov	r1, r10
 1772 06b8 0A22     		movs	r2, #10
 1773 06ba 0023     		movs	r3, #0
 1774 06bc FFF7FEFF 		bl	__aeabi_uldivmod
 1775              	.LVL224:
 153:source\lcd/print.c ****                     w = w / 10;
 1776              		.loc 1 153 19 view .LVU587
 1777 06c0 039B     		ldr	r3, [sp, #12]
 154:source\lcd/print.c ****               }
 1778              		.loc 1 154 23 view .LVU588
 1779 06c2 0298     		ldr	r0, [sp, #8]
 153:source\lcd/print.c ****                     w = w / 10;
 1780              		.loc 1 153 25 view .LVU589
 1781 06c4 3032     		adds	r2, r2, #48
 153:source\lcd/print.c ****                     w = w / 10;
 1782              		.loc 1 153 19 view .LVU590
 1783 06c6 03F8012B 		strb	r2, [r3], #1
 154:source\lcd/print.c ****               }
 1784              		.loc 1 154 23 view .LVU591
 1785 06ca 5146     		mov	r1, r10
 153:source\lcd/print.c ****                     w = w / 10;
 1786              		.loc 1 153 19 view .LVU592
 1787 06cc 0393     		str	r3, [sp, #12]
 154:source\lcd/print.c ****               }
 1788              		.loc 1 154 23 view .LVU593
 1789 06ce 0A22     		movs	r2, #10
 1790 06d0 0023     		movs	r3, #0
 1791 06d2 FFF7FEFF 		bl	__aeabi_uldivmod
 1792              	.LVL225:
 153:source\lcd/print.c ****                     w = w / 10;
 1793              		.loc 1 153 15 view .LVU594
 1794 06d6 08F10108 		add	r8, r8, #1
 1795              	.LVL226:
 154:source\lcd/print.c ****               }
 1796              		.loc 1 154 21 is_stmt 1 view .LVU595
 154:source\lcd/print.c ****               }
 1797              		.loc 1 154 23 is_stmt 0 view .LVU596
 1798 06da 0290     		str	r0, [sp, #8]
 1799              	.LVL227:
 154:source\lcd/print.c ****               }
 1800              		.loc 1 154 23 view .LVU597
 1801 06dc 8A46     		mov	r10, r1
 1802              	.LVL228:
 154:source\lcd/print.c ****               }
 1803              		.loc 1 154 23 view .LVU598
 1804 06de E4E7     		b	.L108
 1805              	.LVL229:
 1806              	.L114:
 154:source\lcd/print.c ****               }
 1807              		.loc 1 154 23 view .LVU599
 1808              	.LBE77:
 1809              	.LBB78:
 1810              	.LBB66:
 182:source\lcd/print.c ****       {
 1811              		.loc 1 182 32 is_stmt 1 view .LVU600
 1812 06e0 6B6A     		ldr	r3, [r5, #36]
 1813 06e2 4946     		mov	r1, r9
 1814 06e4 2020     		movs	r0, #32
 1815 06e6 9847     		blx	r3
 1816              	.LVL230:
 1817              	.L112:
 182:source\lcd/print.c ****       {
 1818              		.loc 1 182 32 view .LVU601
 182:source\lcd/print.c ****       {
 1819              		.loc 1 182 32 is_stmt 0 view .LVU602
 1820 06e8 BAF1010A 		subs	r10, r10, #1
 1821              	.LVL231:
 182:source\lcd/print.c ****       {
 1822              		.loc 1 182 32 view .LVU603
 1823 06ec F8D5     		bpl	.L114
 1824 06ee 27EAE772 		bic	r2, r7, r7, asr #31
 1825 06f2 013F     		subs	r7, r7, #1
 1826 06f4 BF1A     		subs	r7, r7, r2
 1827 06f6 54E7     		b	.L113
 1828              	.LVL232:
 1829              	.L155:
 182:source\lcd/print.c ****       {
 1830              		.loc 1 182 32 view .LVU604
 1831              	.LBE66:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1832              		.loc 1 181 13 view .LVU605
 1833 06f8 BA46     		mov	r10, r7
 1834 06fa F5E7     		b	.L112
 1835              	.LVL233:
 1836              	.L116:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1837              		.loc 1 181 13 view .LVU606
 1838 06fc CDE90632 		strd	r3, r2, [sp, #24]
 1839              	.LBB67:
 186:source\lcd/print.c ****       }
 1840              		.loc 1 186 45 is_stmt 1 view .LVU607
 1841 0700 0398     		ldr	r0, [sp, #12]
 1842 0702 6B6A     		ldr	r3, [r5, #36]
 1843              	.LVL234:
 186:source\lcd/print.c ****       }
 1844              		.loc 1 186 45 is_stmt 0 view .LVU608
 1845 0704 4946     		mov	r1, r9
 1846              	.LVL235:
 186:source\lcd/print.c ****       }
 1847              		.loc 1 186 45 view .LVU609
 1848 0706 9847     		blx	r3
 1849              	.LVL236:
 1850 0708 DDE90632 		ldrd	r3, r2, [sp, #24]
 186:source\lcd/print.c ****       }
 1851              		.loc 1 186 32 is_stmt 1 view .LVU610
 1852              	.LVL237:
 186:source\lcd/print.c ****       }
 1853              		.loc 1 186 32 is_stmt 0 view .LVU611
 1854 070c 4BE7     		b	.L115
 1855              	.LVL238:
 1856              	.L120:
 186:source\lcd/print.c ****       }
 1857              		.loc 1 186 32 view .LVU612
 1858              	.LBE67:
 1859              	.LBB68:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1860              		.loc 1 188 7 is_stmt 1 view .LVU613
 1861 070e 1846     		mov	r0, r3
 1862 0710 6A6A     		ldr	r2, [r5, #36]
 1863 0712 0693     		str	r3, [sp, #24]
 1864 0714 4946     		mov	r1, r9
 1865 0716 9047     		blx	r2
 1866              	.LVL239:
 1867 0718 069B     		ldr	r3, [sp, #24]
 1868 071a 54E7     		b	.L119
 1869              	.L222:
 1870              		.align	2
 1871              	.L221:
 1872 071c 09000000 		.word	.LC4
 1873 0720 03000000 		.word	.LC1
 1874 0724 0D000000 		.word	.LC6
 1875 0728 0F000000 		.word	.LC7
 1876 072c 0B000000 		.word	.LC5
 1877              	.LVL240:
 1878              	.L129:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1879              		.loc 1 188 7 is_stmt 0 view .LVU614
 1880              	.LBE68:
 1881              	.LBB69:
 192:source\lcd/print.c ****                 case '<':
 1882              		.loc 1 192 7 is_stmt 1 view .LVU615
 192:source\lcd/print.c ****                 case '<':
 1883              		.loc 1 192 23 is_stmt 0 view .LVU616
 1884 0730 039B     		ldr	r3, [sp, #12]
 1885              	.LVL241:
 192:source\lcd/print.c ****                 case '<':
 1886              		.loc 1 192 23 view .LVU617
 1887 0732 08AA     		add	r2, sp, #32
 1888 0734 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1889              	.LVL242:
 192:source\lcd/print.c ****                 case '<':
 1890              		.loc 1 192 7 view .LVU618
 1891 0736 3C28     		cmp	r0, #60
 1892 0738 0DD0     		beq	.L123
 1893 073a 3E28     		cmp	r0, #62
 1894 073c 21D0     		beq	.L124
 200:source\lcd/print.c **** 	          charcount++;
 1895              		.loc 1 200 11 is_stmt 1 view .LVU619
 1896 073e 6B6A     		ldr	r3, [r5, #36]
 1897 0740 4946     		mov	r1, r9
 1898 0742 9847     		blx	r3
 1899              	.LVL243:
 201:source\lcd/print.c **** 	          break;
 1900              		.loc 1 201 12 view .LVU620
 201:source\lcd/print.c **** 	          break;
 1901              		.loc 1 201 21 is_stmt 0 view .LVU621
 1902 0744 0AF1010A 		add	r10, r10, #1
 1903              	.LVL244:
 202:source\lcd/print.c **** 	     }
 1904              		.loc 1 202 12 is_stmt 1 view .LVU622
 1905 0748 0AE0     		b	.L127
 1906              	.L126:
 194:source\lcd/print.c **** 		  break;
 1907              		.loc 1 194 5 view .LVU623
 1908 074a 6B6A     		ldr	r3, [r5, #36]
 1909 074c 4946     		mov	r1, r9
 1910 074e 3020     		movs	r0, #48
 1911 0750 0AF1010A 		add	r10, r10, #1
 1912              	.LVL245:
 194:source\lcd/print.c **** 		  break;
 1913              		.loc 1 194 5 is_stmt 0 view .LVU624
 1914 0754 9847     		blx	r3
 1915              	.LVL246:
 1916              	.L123:
 194:source\lcd/print.c **** 		  break;
 1917              		.loc 1 194 5 is_stmt 1 view .LVU625
 1918 0756 EB68     		ldr	r3, [r5, #12]
 1919 0758 013B     		subs	r3, r3, #1
 1920 075a 002B     		cmp	r3, #0
 1921 075c EB60     		str	r3, [r5, #12]
 1922 075e F4DA     		bge	.L126
 1923              	.L127:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1924              		.loc 1 191 29 view .LVU626
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1925              		.loc 1 191 30 is_stmt 0 view .LVU627
 1926 0760 039B     		ldr	r3, [sp, #12]
 1927 0762 0133     		adds	r3, r3, #1
 1928 0764 0393     		str	r3, [sp, #12]
 1929              	.LVL247:
 1930              	.L121:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1931              		.loc 1 191 22 is_stmt 1 view .LVU628
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1932              		.loc 1 191 10 is_stmt 0 view .LVU629
 1933 0766 039B     		ldr	r3, [sp, #12]
 1934 0768 9845     		cmp	r8, r3
 1935 076a E1D1     		bne	.L129
 1936              	.LVL248:
 1937              	.L130:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1938              		.loc 1 191 10 view .LVU630
 1939              	.LBE69:
 210:source\lcd/print.c ****       return charcount;
 1940              		.loc 1 210 7 is_stmt 1 view .LVU631
 1941 076c 049B     		ldr	r3, [sp, #16]
 1942 076e EBB9     		cbnz	r3, .L157
 1943              	.LVL249:
 1944              	.L135:
 210:source\lcd/print.c ****       return charcount;
 1945              		.loc 1 210 7 view .LVU632
 210:source\lcd/print.c ****       return charcount;
 1946              		.loc 1 210 26 view .LVU633
 211:source\lcd/print.c ****       }
 1947              		.loc 1 211 7 view .LVU634
 211:source\lcd/print.c ****       }
 1948              		.loc 1 211 7 is_stmt 0 view .LVU635
 1949              	.LBE78:
 1950              	.LBE81:
 1951              	.LBE88:
 388:source\lcd/print.c ****                continue;
 1952              		.loc 1 388 26 view .LVU636
 1953 0770 019B     		ldr	r3, [sp, #4]
 1954 0772 5344     		add	r3, r3, r10
 1955 0774 8BE5     		b	.L213
 1956              	.LVL250:
 1957              	.L128:
 1958              	.LBB89:
 1959              	.LBB82:
 1960              	.LBB79:
 1961              	.LBB70:
 197:source\lcd/print.c **** 	          break;
 1962              		.loc 1 197 12 is_stmt 1 view .LVU637
 1963 0776 6B6A     		ldr	r3, [r5, #36]
 1964 0778 4946     		mov	r1, r9
 1965 077a 3020     		movs	r0, #48
 1966 077c 0AF1010A 		add	r10, r10, #1
 1967              	.LVL251:
 197:source\lcd/print.c **** 	          break;
 1968              		.loc 1 197 12 is_stmt 0 view .LVU638
 1969 0780 9847     		blx	r3
 1970              	.LVL252:
 1971              	.L124:
 197:source\lcd/print.c **** 	          break;
 1972              		.loc 1 197 12 is_stmt 1 view .LVU639
 1973 0782 2B69     		ldr	r3, [r5, #16]
 1974 0784 013B     		subs	r3, r3, #1
 1975 0786 002B     		cmp	r3, #0
 1976 0788 2B61     		str	r3, [r5, #16]
 1977 078a F4DA     		bge	.L128
 197:source\lcd/print.c **** 	          break;
 1978              		.loc 1 197 12 is_stmt 0 view .LVU640
 1979 078c E8E7     		b	.L127
 1980              	.LVL253:
 1981              	.L131:
 197:source\lcd/print.c **** 	          break;
 1982              		.loc 1 197 12 view .LVU641
 1983              	.LBE70:
 206:source\lcd/print.c **** 	 charcount += len;
 1984              		.loc 1 206 3 is_stmt 1 view .LVU642
 1985 078e 6B6A     		ldr	r3, [r5, #36]
 1986 0790 4946     		mov	r1, r9
 1987 0792 3020     		movs	r0, #48
 1988 0794 9847     		blx	r3
 1989              	.LVL254:
 1990 0796 23E7     		b	.L122
 1991              	.LVL255:
 1992              	.L136:
 210:source\lcd/print.c ****       return charcount;
 1993              		.loc 1 210 7 view .LVU643
 1994 0798 6B6A     		ldr	r3, [r5, #36]
 1995 079a 4946     		mov	r1, r9
 1996 079c 2020     		movs	r0, #32
 1997 079e 9847     		blx	r3
 1998              	.LVL256:
 1999              	.L134:
 210:source\lcd/print.c ****       return charcount;
 2000              		.loc 1 210 7 view .LVU644
 210:source\lcd/print.c ****       return charcount;
 2001              		.loc 1 210 7 is_stmt 0 view .LVU645
 2002 07a0 013C     		subs	r4, r4, #1
 2003              	.LVL257:
 210:source\lcd/print.c ****       return charcount;
 2004              		.loc 1 210 7 view .LVU646
 2005 07a2 F9D5     		bpl	.L136
 2006 07a4 002F     		cmp	r7, #0
 2007 07a6 A8BF     		it	ge
 2008 07a8 BA44     		addge	r10, r10, r7
 2009 07aa E1E7     		b	.L135
 2010              	.LVL258:
 2011              	.L157:
 210:source\lcd/print.c ****       return charcount;
 2012              		.loc 1 210 7 view .LVU647
 2013 07ac 3C46     		mov	r4, r7
 2014 07ae F7E7     		b	.L134
 2015              	.LBE79:
 2016              	.LBE82:
 2017              	.LBE89:
 2018              	.LBE90:
 2019              		.cfi_endproc
 2020              	.LFE5:
 2022              		.section	.text.sprintf,"ax",%progbits
 2023              		.align	1
 2024              		.global	sprintf
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2029              	sprintf:
 2030              	.LVL259:
 2031              	.LFB6:
 394:source\lcd/print.c **** 
 395:source\lcd/print.c **** 
 396:source\lcd/print.c **** int sprintf (char *buff, const char *fmt, ...)
 397:source\lcd/print.c **** {
 2032              		.loc 1 397 1 is_stmt 1 view -0
 2033              		.cfi_startproc
 2034              		@ args = 4, pretend = 12, frame = 72
 2035              		@ frame_needed = 0, uses_anonymous_args = 1
 398:source\lcd/print.c ****       StringOutputFile sf;
 2036              		.loc 1 398 7 view .LVU649
 399:source\lcd/print.c ****       va_list a;
 2037              		.loc 1 399 7 view .LVU650
 400:source\lcd/print.c ****       int length;
 2038              		.loc 1 400 7 view .LVU651
 401:source\lcd/print.c ****       printf_display_rec dr;
 2039              		.loc 1 401 7 view .LVU652
 402:source\lcd/print.c ****       va_start(a, fmt);
 2040              		.loc 1 402 7 view .LVU653
 397:source\lcd/print.c ****       StringOutputFile sf;
 2041              		.loc 1 397 1 is_stmt 0 view .LVU654
 2042 0000 0EB4     		push	{r1, r2, r3}
 2043              		.cfi_def_cfa_offset 12
 2044              		.cfi_offset 1, -12
 2045              		.cfi_offset 2, -8
 2046              		.cfi_offset 3, -4
 2047 0002 10B5     		push	{r4, lr}
 2048              		.cfi_def_cfa_offset 20
 2049              		.cfi_offset 4, -20
 2050              		.cfi_offset 14, -16
 2051 0004 93B0     		sub	sp, sp, #76
 2052              		.cfi_def_cfa_offset 96
 397:source\lcd/print.c ****       StringOutputFile sf;
 2053              		.loc 1 397 1 view .LVU655
 2054 0006 15AA     		add	r2, sp, #84
 403:source\lcd/print.c ****       sf.ptr = buff;
 404:source\lcd/print.c ****       dr.putc = _sputc;
 2055              		.loc 1 404 15 view .LVU656
 2056 0008 0A4B     		ldr	r3, .L224
 397:source\lcd/print.c ****       StringOutputFile sf;
 2057              		.loc 1 397 1 view .LVU657
 2058 000a 52F8041B 		ldr	r1, [r2], #4
 2059              		.loc 1 404 15 view .LVU658
 2060 000e 0B93     		str	r3, [sp, #44]
 405:source\lcd/print.c ****       dr.ferror = _serror;
 2061              		.loc 1 405 17 view .LVU659
 2062 0010 094B     		ldr	r3, .L224+4
 2063 0012 0C93     		str	r3, [sp, #48]
 403:source\lcd/print.c ****       sf.ptr = buff;
 2064              		.loc 1 403 14 view .LVU660
 2065 0014 CDE90002 		strd	r0, r2, [sp]
 404:source\lcd/print.c ****       dr.ferror = _serror;
 2066              		.loc 1 404 7 is_stmt 1 view .LVU661
 2067              		.loc 1 405 7 view .LVU662
 406:source\lcd/print.c ****       dr.fn = 0;
 2068              		.loc 1 406 7 view .LVU663
 2069              		.loc 1 406 13 is_stmt 0 view .LVU664
 2070 0018 0024     		movs	r4, #0
 407:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 2071              		.loc 1 407 16 view .LVU665
 2072 001a 02AB     		add	r3, sp, #8
 2073 001c 6846     		mov	r0, sp
 406:source\lcd/print.c ****       dr.fn = 0;
 2074              		.loc 1 406 13 view .LVU666
 2075 001e 0A94     		str	r4, [sp, #40]
 2076              		.loc 1 407 7 is_stmt 1 view .LVU667
 2077              		.loc 1 407 16 is_stmt 0 view .LVU668
 2078 0020 FFF7FEFF 		bl	__vfprintf
 2079              	.LVL260:
 408:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 2080              		.loc 1 408 7 is_stmt 1 view .LVU669
 2081              	.LBB91:
 2082              	.LBI91:
  31:source\lcd/print.c **** {
 2083              		.loc 1 31 5 view .LVU670
 2084              	.LBB92:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 2085              		.loc 1 33 7 view .LVU671
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2086              		.loc 1 34 7 view .LVU672
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2087              		.loc 1 34 13 is_stmt 0 view .LVU673
 2088 0024 009B     		ldr	r3, [sp]
 2089              	.LVL261:
  35:source\lcd/print.c ****       sf->ptr = op;
 2090              		.loc 1 35 7 is_stmt 1 view .LVU674
  35:source\lcd/print.c ****       sf->ptr = op;
 2091              		.loc 1 35 21 is_stmt 0 view .LVU675
 2092 0026 1C70     		strb	r4, [r3]
 2093              	.LVL262:
  36:source\lcd/print.c ****       return r;
 2094              		.loc 1 36 7 is_stmt 1 view .LVU676
  37:source\lcd/print.c **** }
 2095              		.loc 1 37 7 view .LVU677
  37:source\lcd/print.c **** }
 2096              		.loc 1 37 7 is_stmt 0 view .LVU678
 2097              	.LBE92:
 2098              	.LBE91:
 409:source\lcd/print.c ****       va_end(a);
 2099              		.loc 1 409 7 is_stmt 1 view .LVU679
 410:source\lcd/print.c ****       return length;
 2100              		.loc 1 410 7 view .LVU680
 411:source\lcd/print.c **** }
 2101              		.loc 1 411 1 is_stmt 0 view .LVU681
 2102 0028 13B0     		add	sp, sp, #76
 2103              		.cfi_def_cfa_offset 20
 2104              		@ sp needed
 2105 002a BDE81040 		pop	{r4, lr}
 2106              		.cfi_restore 14
 2107              		.cfi_restore 4
 2108              		.cfi_def_cfa_offset 12
 2109 002e 03B0     		add	sp, sp, #12
 2110              		.cfi_restore 3
 2111              		.cfi_restore 2
 2112              		.cfi_restore 1
 2113              		.cfi_def_cfa_offset 0
 2114 0030 7047     		bx	lr
 2115              	.L225:
 2116 0032 00BF     		.align	2
 2117              	.L224:
 2118 0034 00000000 		.word	_sputc
 2119 0038 00000000 		.word	_serror
 2120              		.cfi_endproc
 2121              	.LFE6:
 2123              		.section	.text.vsprintf,"ax",%progbits
 2124              		.align	1
 2125              		.global	vsprintf
 2126              		.syntax unified
 2127              		.thumb
 2128              		.thumb_func
 2130              	vsprintf:
 2131              	.LVL263:
 2132              	.LFB7:
 412:source\lcd/print.c **** 
 413:source\lcd/print.c **** 
 414:source\lcd/print.c **** int vsprintf (char *buff, const char *fmt, va_list a)
 415:source\lcd/print.c **** {
 2133              		.loc 1 415 1 is_stmt 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 72
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 416:source\lcd/print.c ****       StringOutputFile sf;
 2137              		.loc 1 416 7 view .LVU683
 417:source\lcd/print.c ****       int length;
 2138              		.loc 1 417 7 view .LVU684
 418:source\lcd/print.c ****       printf_display_rec dr;
 2139              		.loc 1 418 7 view .LVU685
 419:source\lcd/print.c ****       dr.putc = _sputc;
 2140              		.loc 1 419 7 view .LVU686
 415:source\lcd/print.c ****       StringOutputFile sf;
 2141              		.loc 1 415 1 is_stmt 0 view .LVU687
 2142 0000 10B5     		push	{r4, lr}
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 4, -8
 2145              		.cfi_offset 14, -4
 2146 0002 92B0     		sub	sp, sp, #72
 2147              		.cfi_def_cfa_offset 80
 2148              		.loc 1 419 15 view .LVU688
 2149 0004 074B     		ldr	r3, .L227
 2150 0006 0B93     		str	r3, [sp, #44]
 420:source\lcd/print.c ****       dr.ferror = _serror;
 2151              		.loc 1 420 7 is_stmt 1 view .LVU689
 2152              		.loc 1 420 17 is_stmt 0 view .LVU690
 2153 0008 074B     		ldr	r3, .L227+4
 2154 000a 0C93     		str	r3, [sp, #48]
 421:source\lcd/print.c ****       dr.fn = 0;
 2155              		.loc 1 421 7 is_stmt 1 view .LVU691
 2156              		.loc 1 421 13 is_stmt 0 view .LVU692
 2157 000c 0024     		movs	r4, #0
 422:source\lcd/print.c ****       sf.ptr = buff;
 2158              		.loc 1 422 14 view .LVU693
 2159 000e 0190     		str	r0, [sp, #4]
 423:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 2160              		.loc 1 423 16 view .LVU694
 2161 0010 02AB     		add	r3, sp, #8
 2162 0012 01A8     		add	r0, sp, #4
 2163              	.LVL264:
 421:source\lcd/print.c ****       dr.fn = 0;
 2164              		.loc 1 421 13 view .LVU695
 2165 0014 0A94     		str	r4, [sp, #40]
 422:source\lcd/print.c ****       sf.ptr = buff;
 2166              		.loc 1 422 7 is_stmt 1 view .LVU696
 2167              		.loc 1 423 7 view .LVU697
 2168              		.loc 1 423 16 is_stmt 0 view .LVU698
 2169 0016 FFF7FEFF 		bl	__vfprintf
 2170              	.LVL265:
 424:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 2171              		.loc 1 424 7 is_stmt 1 view .LVU699
 2172              	.LBB93:
 2173              	.LBI93:
  31:source\lcd/print.c **** {
 2174              		.loc 1 31 5 view .LVU700
 2175              	.LBB94:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 2176              		.loc 1 33 7 view .LVU701
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2177              		.loc 1 34 7 view .LVU702
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2178              		.loc 1 34 13 is_stmt 0 view .LVU703
 2179 001a 019B     		ldr	r3, [sp, #4]
 2180              	.LVL266:
  35:source\lcd/print.c ****       sf->ptr = op;
 2181              		.loc 1 35 7 is_stmt 1 view .LVU704
  35:source\lcd/print.c ****       sf->ptr = op;
 2182              		.loc 1 35 21 is_stmt 0 view .LVU705
 2183 001c 1C70     		strb	r4, [r3]
 2184              	.LVL267:
  36:source\lcd/print.c ****       return r;
 2185              		.loc 1 36 7 is_stmt 1 view .LVU706
  37:source\lcd/print.c **** }
 2186              		.loc 1 37 7 view .LVU707
  37:source\lcd/print.c **** }
 2187              		.loc 1 37 7 is_stmt 0 view .LVU708
 2188              	.LBE94:
 2189              	.LBE93:
 425:source\lcd/print.c ****       return length;
 2190              		.loc 1 425 7 is_stmt 1 view .LVU709
 426:source\lcd/print.c **** }
 2191              		.loc 1 426 1 is_stmt 0 view .LVU710
 2192 001e 12B0     		add	sp, sp, #72
 2193              		.cfi_def_cfa_offset 8
 2194              		@ sp needed
 2195 0020 10BD     		pop	{r4, pc}
 2196              	.LVL268:
 2197              	.L228:
 2198              		.loc 1 426 1 view .LVU711
 2199 0022 00BF     		.align	2
 2200              	.L227:
 2201 0024 00000000 		.word	_sputc
 2202 0028 00000000 		.word	_serror
 2203              		.cfi_endproc
 2204              	.LFE7:
 2206              		.global	errno
 2207              		.section	.bss.errno,"aw",%nobits
 2208              		.align	2
 2211              	errno:
 2212 0000 00000000 		.space	4
 2213              		.text
 2214              	.Letext0:
 2215              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 2216              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 print.c
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:20     .text._sputc:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:26     .text._sputc:00000000 _sputc
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:55     .text._serror:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:61     .text._serror:00000000 _serror
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:80     .text._sputc1:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:86     .text._sputc1:00000000 _sputc1
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:111    .text.is_digit:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:117    .text.is_digit:00000000 is_digit
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:163    .text.__vfprintf:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:169    .text.__vfprintf:00000000 __vfprintf
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:617    .text.__vfprintf:0000018c $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:650    .text.__vfprintf:00000210 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1176   .text.__vfprintf:00000428 $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1190   .text.__vfprintf:00000444 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1390   .text.__vfprintf:00000510 $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1401   .text.__vfprintf:00000538 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1872   .text.__vfprintf:0000071c $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:1884   .text.__vfprintf:00000730 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2023   .text.sprintf:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2029   .text.sprintf:00000000 sprintf
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2118   .text.sprintf:00000034 $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2124   .text.vsprintf:00000000 $t
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2130   .text.vsprintf:00000000 vsprintf
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2201   .text.vsprintf:00000024 $d
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2211   .bss.errno:00000000 errno
C:\Users\dinot\AppData\Local\Temp\ccnVknp4.s:2208   .bss.errno:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
strlen
